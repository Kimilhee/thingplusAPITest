{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "thingplus",
    "description": "minimum apis minimum apis minimum apis minimum apis"
  },
  "host": "api.testrs.thingbine.com",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Authorization": {
      "name": "Authorization",
      "type": "apiKey",
      "in": "header"
    },
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "scopes": {
        "gateways-read": "gateways-read",
        "rules-read": "rules-read"
      },
      "authorizationUrl": "https://api.thingplus.net/v1/oauth2/authorize",
      "tokenUrl": "https://api.thingplus.net/v1/oauth2/token"
    }
  },
  "paths": {
    "/oauth2/authClients": {
      "post": {
        "operationId": "POST_oauth2-authClients",
        "summary": "OAuth2 Create authClients",
        "tags": [
          "OAuth2"
        ],
        "description": "#### 인증 클라이언트 생성 Api",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "reqId": {
                      "type": "string",
                      "description": "클라이언트 id"
                    }
                  },
                  "required": [
                    "reqId"
                  ]
                },
                {
                  "$ref": "#/definitions/authclient"
                }
              ],
              "example": {
                "name": "eltempName1",
                "reqId": "eltempId1",
                "clientSecret": "eltempSecret1",
                "scopes": [
                  "user-profile-read",
                  "gateway-update",
                  "timeline-read",
                  "tag",
                  "rule-read",
                  "service-read",
                  "site-read"
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "_user": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string",
                      "description": "클라이언트 id"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/authclient"
                },
                {
                  "$ref": "#/definitions/common-output"
                }
              ]
            },
            "examples": {
              "application/json": {
                "name": "eltempName1",
                "clientSecret": "eltempSecret1",
                "scopes": [
                  "user-profile-read",
                  "gateway-update",
                  "timeline-read",
                  "tag",
                  "rule-read",
                  "service-read",
                  "site-read"
                ],
                "_user": "1",
                "mtime": 1487746647407,
                "ctime": 1487746647407,
                "id": "eltempId1"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "POST_oauth2-authClients",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "statusCode": 200,
            "dynamic": false,
            "enabled": false
          }
        }
      }
    },
    "/oauth2/authorize": {
      "get": {
        "operationId": "GET_oauth2-authorize",
        "summary": "OAuth2Authorize",
        "tags": [
          "OAuth2"
        ],
        "description": "#### OAuth 2.0 인증용 API\n\n이 API의 결과는 사용자로 하여금 API 사용권한을 부여할지 여부를 입력받기 위한 결과 촉구용 웹페이지임.",
        "parameters": [
          {
            "name": "response_type",
            "in": "query",
            "description": "응답 종류",
            "required": true,
            "type": "string",
            "enum": [
              "code",
              "token"
            ]
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "/authClients API를 통해 생성한 클라이언트 id",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "description": "서버에서 결과 값 redirecting 시켜줄 uri",
            "required": true,
            "type": "string",
            "format": "uri"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "x-stoplight": {
          "id": "GET_oauth2-authorize",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "operationId": "POST_oauth2-token",
        "summary": "OAuth2Token",
        "tags": [
          "OAuth2"
        ],
        "description": "#### OAuth 2.0 인증 후 access_token을 받아오기 위한 API\n\ntoken API 를 통해 token을 획득하여 \n\n다른 API의 header 에 Authorization 필드 부분에 값을 채워 사용하세요\n\n{token_type} {access_token} 형태로 입력\n\nex) Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.ezcxfQ.BfgfVvKhvTOwlYHSzcFPQl-0c",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "/oauth2/authorize 통해서 받아온 인증 코드"
                },
                "client_id": {
                  "type": "string",
                  "description": "/authClients API를 통해 생성한 클라이언트 id"
                },
                "client_secret": {
                  "type": "string",
                  "description": "/authClients API를 통해 생성한 클라이언트 secret"
                },
                "redirect_uri": {
                  "type": "string",
                  "description": "/oauth2/authorize API를 호출할 때, 입력한 redirect_uri과 동일한 값."
                },
                "grant_type": {
                  "type": "string",
                  "description": "OAuth2 인증타입",
                  "enum": [
                    "authorization_code",
                    "password"
                  ]
                }
              },
              "required": [
                "code",
                "client_id",
                "client_secret",
                "redirect_uri",
                "grant_type"
              ],
              "example": {
                "code": "kJ4gYLfvDTcfZpd1",
                "client_id": "eltempId1",
                "client_secret": "eltempSecret1",
                "redirect_uri": "http://localhost:8080/oauth",
                "grant_type": "authorization_code"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "API access token"
                },
                "token_type": {
                  "type": "string",
                  "description": "현재 bearer 만 지원"
                }
              }
            },
            "examples": {
              "application/json": {
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiIwIiwiY2xpZW50SWQiOiJlbHRlbXBJZDEiLCJpYXQiOjE0OTEzODEyMjgsImV4cCI6MTQ5MjY3NzIyOH0.a1oPiuS3J3olb9R1vecYNCruthttFYUmZrX6AWajXJU",
                "token_type": "Bearer"
              }
            }
          }
        },
        "x-stoplight": {
          "id": "POST_oauth2-token",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "GET-user-me",
        "summary": "Get My Account",
        "tags": [
          "thingplus",
          "Users"
        ],
        "description": "#### 로그인한 사용자의 정보 조회용 API",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "200: 성공"
                },
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "loginId": "admin",
                "email": "seok.ryu@daliworks.net",
                "locale": "ko",
                "country": "kr",
                "timezone": "+9.00",
                "accessApproval": "allow",
                "_service": "0",
                "_site": "0",
                "mtime": "1490251985888",
                "ctime": "1481879645188",
                "billing": "user:0",
                "billingLimit": "user:0:limit",
                "billingCurrent": "user:0:current",
                "billingMeter": "user:0:meter",
                "roles": [
                  "systemAdmin",
                  "serviceAdmin",
                  "siteAdmin",
                  "user:0"
                ],
                "nickname": "cccddd",
                "id": "0"
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-user-me",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": true,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "사용자 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-user",
        "summary": "Get User",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/user-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "loginId": "safeadmin",
                  "email": "rs@daliworks.net",
                  "locale": "ko",
                  "timezone": "+9.00",
                  "country": "kr",
                  "accessApproval": "allow",
                  "_service": "1",
                  "_site": "1",
                  "roles": [
                    "serviceAdmin",
                    "user:1"
                  ],
                  "mtime": "1483420098948",
                  "ctime": "1483420068637",
                  "billing": "user:1",
                  "billingLimit": "user:1:limit",
                  "billingCurrent": "user:1:current",
                  "billingMeter": "user:1:meter",
                  "verifiedEmail": "rs@daliworks.net",
                  "id": "1"
                }
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": "Access denied"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-user",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "LIST-users",
        "summary": "List Users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/user-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "loginId": "safeadmin",
                    "email": "rs@daliworks.net",
                    "locale": "ko",
                    "timezone": "+9.00",
                    "country": "kr",
                    "accessApproval": "allow",
                    "_service": "1",
                    "_site": "1",
                    "roles": [
                      "serviceAdmin",
                      "user:1"
                    ],
                    "mtime": "1483420098948",
                    "ctime": "1483420068637",
                    "billing": "user:1",
                    "billingLimit": "user:1:limit",
                    "billingCurrent": "user:1:current",
                    "billingMeter": "user:1:meter",
                    "verifiedEmail": "rs@daliworks.net",
                    "id": "1"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-users",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gatewayModels": {
      "get": {
        "operationId": "LIST-gatewayModels",
        "summary": "List GatewayModels",
        "tags": [
          "thingplus",
          "Gatewaymodels",
          "GatewayModels"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/gatewaymodel-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "idFormat": "custom",
                    "deviceModels": [
                      {
                        "id": "trueyesNFCAirQ",
                        "displayName": "Trueyes NFC Air-Q",
                        "idTemplate": "{gatewayId}",
                        "discoverable": "n",
                        "sensors": [
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericTemp",
                            "sequence": "1",
                            "type": "temperature",
                            "category": "sensor"
                          },
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericHumi",
                            "sequence": "1",
                            "type": "humidity",
                            "category": "sensor"
                          },
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericCo",
                            "sequence": "1",
                            "type": "co",
                            "category": "sensor"
                          },
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericCo2",
                            "sequence": "1",
                            "type": "co2",
                            "category": "sensor"
                          },
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericDust",
                            "sequence": "1",
                            "type": "dust",
                            "category": "sensor"
                          },
                          {
                            "network": "daliworks",
                            "driverName": "genericSensor",
                            "model": "genericNumber",
                            "sequence": "1",
                            "type": "number",
                            "category": "sensor"
                          }
                        ],
                        "max": 1
                      }
                    ],
                    "vendor": "TRUEYES",
                    "id": "20",
                    "mtime": "1484640369907",
                    "displayName": "Trueyes NFC Air-Q",
                    "model": "trueyesNFC",
                    "deviceMgmt": {
                      "reportInterval": {
                        "show": "y"
                      }
                    },
                    "ctime": "1484640369907"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-gatewayModels",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": true,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gatewayModels/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "게이트웨이 모델 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-gatewayModel",
        "summary": "Get GatewayModel",
        "tags": [
          "Gatewaymodels",
          "GatewayModels"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/gatewaymodel-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "idFormat": "custom",
                  "deviceModels": [
                    {
                      "id": "trueyesNFCAirQ",
                      "displayName": "Trueyes NFC Air-Q",
                      "idTemplate": "{gatewayId}",
                      "discoverable": "n",
                      "sensors": [
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericTemp",
                          "sequence": "1",
                          "type": "temperature",
                          "category": "sensor"
                        },
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericHumi",
                          "sequence": "1",
                          "type": "humidity",
                          "category": "sensor"
                        },
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericCo",
                          "sequence": "1",
                          "type": "co",
                          "category": "sensor"
                        },
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericCo2",
                          "sequence": "1",
                          "type": "co2",
                          "category": "sensor"
                        },
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericDust",
                          "sequence": "1",
                          "type": "dust",
                          "category": "sensor"
                        },
                        {
                          "network": "daliworks",
                          "driverName": "genericSensor",
                          "model": "genericNumber",
                          "sequence": "1",
                          "type": "number",
                          "category": "sensor"
                        }
                      ],
                      "max": 1
                    }
                  ],
                  "vendor": "TRUEYES",
                  "id": "20",
                  "mtime": "1484640369907",
                  "displayName": "Trueyes NFC Air-Q",
                  "model": "trueyesNFC",
                  "deviceMgmt": {
                    "reportInterval": {
                      "show": "y"
                    }
                  },
                  "ctime": "1484640369907"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-gatewayModel",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/sensorTypes": {
      "get": {
        "operationId": "LIST-sensorTypes",
        "summary": "List SensorTypes",
        "tags": [
          "Sensortypes",
          "SensorTypes"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sensortype-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "decimalPlace": "2",
                    "stats": {
                      "funcs": [
                        "avg"
                      ],
                      "frequency": "y",
                      "cumulative": "y"
                    },
                    "id": "strain",
                    "unit": "um/m",
                    "mtime": "1489645343084",
                    "category": "sensor",
                    "chart": {
                      "drawable": true,
                      "dataType": "series",
                      "cumulative": true,
                      "intervalFunc": "last",
                      "yaxis": {
                        "min": 0,
                        "max": 3
                      }
                    },
                    "ctime": "1489645343084",
                    "type": "number",
                    "contentType": {
                      "properties": {},
                      "display": [],
                      "type": "object",
                      "link": []
                    },
                    "commands": {},
                    "minimum": "0",
                    "maximum": "10",
                    "range": {
                      "min": -100,
                      "max": 10,
                      "interval": 1
                    },
                    "values": [
                      1
                    ],
                    "displayValues": [
                      "in"
                    ],
                    "displayImage": "y"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-sensorTypes",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/sensorTypes/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "센서 타입 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-sensorType",
        "summary": "Get SensorType",
        "tags": [
          "Sensortypes",
          "SensorTypes"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensortype-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "decimalPlace": "2",
                  "stats": {
                    "funcs": [
                      "avg"
                    ],
                    "frequency": "y",
                    "cumulative": "y"
                  },
                  "id": "strain",
                  "unit": "um/m",
                  "mtime": "1489645343084",
                  "category": "sensor",
                  "chart": {
                    "drawable": true,
                    "dataType": "series",
                    "cumulative": true,
                    "intervalFunc": "last",
                    "yaxis": {
                      "min": 0,
                      "max": 3
                    }
                  },
                  "ctime": "1489645343084",
                  "type": "number",
                  "contentType": {
                    "properties": {},
                    "display": [],
                    "type": "object",
                    "link": []
                  },
                  "commands": {},
                  "minimum": "0",
                  "maximum": "10",
                  "range": {
                    "min": -100,
                    "max": 10,
                    "interval": 1
                  },
                  "values": [
                    1
                  ],
                  "displayValues": [
                    "in"
                  ],
                  "displayImage": "y"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-sensorType",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/sensorDrivers": {
      "get": {
        "operationId": "LIST-sensorDrivers",
        "summary": "List SensorDrivers",
        "tags": [
          "Sensordrivers",
          "SensorDrivers"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sensordriver-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "commands": {
                      "advanwiseLed": {
                        "on": [],
                        "off": []
                      },
                      "ezexPowerController": {
                        "powerOn": [],
                        "powerOff": [],
                        "autoCutoffOn": [],
                        "autoCutoffOff": [],
                        "remoteLockOn": [],
                        "remoteLockOff": [],
                        "set": [
                          {
                            "name": "cutoffvalue",
                            "type": "number",
                            "required": true,
                            "min": 0,
                            "max": 3000,
                            "unit": "w"
                          }
                        ],
                        "get": []
                      },
                      "ezexswitch": {
                        "on": [],
                        "off": []
                      },
                      "ezexlockunlock": {
                        "lock": [],
                        "unlock": []
                      },
                      "ezextimer": {
                        "set": [
                          {
                            "name": "duration",
                            "type": "number",
                            "required": true,
                            "min": 0,
                            "max": 3000,
                            "unit": "sec"
                          }
                        ],
                        "get": []
                      },
                      "genericCamera": {
                        "snapPicture": [
                          null
                        ]
                      },
                      "FI9821WA": {
                        "snapPicture": [],
                        "gotoPresetDefault": [],
                        "resetPosition": [],
                        "reboot": []
                      }
                    },
                    "discoverable": "false",
                    "id": "advanwiseActuator",
                    "contentType": {
                      "advanwiseLed": {
                        "properties": {
                          "cmd": {
                            "type": "string"
                          },
                          "result": {
                            "type": "string",
                            "enum": [
                              "success",
                              "error"
                            ]
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "display": [
                          "cmd"
                        ]
                      },
                      "ezexPowerController": {
                        "properties": {
                          "cmd": {
                            "type": "string"
                          },
                          "result": {
                            "type": "object",
                            "properties": {
                              "cutoffValue": {
                                "type": "number",
                                "unit": "W",
                                "minimum": 0
                              },
                              "powerStatus": {
                                "type": "string",
                                "enum": [
                                  "on",
                                  "off"
                                ]
                              },
                              "autoCutoffStatus": {
                                "type": "string",
                                "enum": [
                                  "on",
                                  "off"
                                ]
                              },
                              "remoteLockStatus": {
                                "type": "string",
                                "enum": [
                                  "on",
                                  "off"
                                ]
                              }
                            }
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "display": [
                          "cmd"
                        ]
                      },
                      "ezexSwitch": {
                        "properties": {
                          "cmd": {
                            "type": "string"
                          },
                          "result": {
                            "type": "string",
                            "enum": [
                              "success",
                              "error"
                            ]
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "display": [
                          "cmd"
                        ]
                      },
                      "ezexLockUnlock": {
                        "properties": {
                          "cmd": {
                            "type": "string"
                          },
                          "result": {
                            "type": "string",
                            "enum": [
                              "success",
                              "error"
                            ]
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "display": [
                          "cmd"
                        ]
                      },
                      "ezexTimer": {
                        "properties": {
                          "cmd": {
                            "type": "string"
                          },
                          "result": {
                            "type": "object",
                            "properties": {
                              "duration": {
                                "type": "number",
                                "unit": "sec",
                                "minimum": 0
                              }
                            }
                          },
                          "error": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "display": [
                          "cmd"
                        ]
                      }
                    },
                    "dataTypes": {},
                    "displayName": "Advanwise Actuator",
                    "models": [
                      "advanwiseLed"
                    ],
                    "supportedNetworks": [
                      "daliworks"
                    ],
                    "mtime": "1489645347197",
                    "category": "actuator",
                    "addressable": "true",
                    "driverName": "advanwiseActuator",
                    "ctime": "1489645347197",
                    "idTemplate": "{gatewayId}-{deviceAddress}-{type}",
                    "unit": {
                      "advanwiseVoc": "ppb",
                      "ezexElecticEnergy": "Wh",
                      "genericDistance": "cm",
                      "libeliumCo": "V",
                      "libeliumCo2": "V",
                      "libeliumNo2": "V",
                      "libeliumO3": "V",
                      "libeliumPressure": "Pa",
                      "libeliumAtmosphericPressure": "kPa",
                      "libeliumNoise": "dbA",
                      "libeliumLight": "Ω",
                      "libeliumLigthLux": "lux",
                      "libeliumNumberPPM": "ppm",
                      "libeliumCh4Pro": "%",
                      "libeliumTempFahr": "°F",
                      "libeliumRainMmh": "mm/h",
                      "libeliumPHPro": "",
                      "jsonrpcVoltageEvent": "Volt"
                    },
                    "networkDrivers": {
                      "jsonrpc": "jsonrpcActuator"
                    },
                    "decimalPlace": {
                      "ezexCurrent": 2,
                      "ezexVoltage": 2,
                      "ezexElectricPowerEvent": 0,
                      "libeliumCo": 3,
                      "libeliumCo2": 3,
                      "libeliumNo2": 3,
                      "libeliumO3": 3,
                      "libeliumPressure": 0,
                      "libeliumAtmosphericPressure": 2,
                      "libeliumNoise": 0,
                      "libeliumDistance": 2,
                      "libeliumLight": 3,
                      "libeliumTemp": 2,
                      "libeliumHumi": 1,
                      "libeliumLigthLux": 2,
                      "libeliumNumberPPM": 3,
                      "libeliumCoPro": 3,
                      "libeliumCo2Pro": 3,
                      "libeliumCh4Pro": 3,
                      "libeliumTempCelsPro": 3,
                      "libeliumTempFahr": 2,
                      "libeliumHumiPro": 2,
                      "libeliumDust": 4,
                      "libeliumPHPro": 3,
                      "jsonrpcVoltageEvent": 2
                    },
                    "recommendedInterval": "60000",
                    "onChange": {
                      "ezexOnoff": true,
                      "ezexMotion": true,
                      "ezexDoor": true,
                      "ezexCountEvent": true,
                      "ezexTag": true,
                      "ezexReader": true,
                      "ezexElectricPowerEvent": true,
                      "jsonrpcDi": true,
                      "jsonrpcMotion": true,
                      "jsonrpcDoor": true,
                      "jsonrpcCountEvent": true,
                      "jsonrpcTag": true,
                      "jsonrpcReader": true,
                      "jsonrpcLight": false,
                      "jsonrpcVoltageEvent": true
                    },
                    "descriptions": {
                      "models": {
                        "visudreamSum": "cumulative power consumption",
                        "visudreamV": "Voltage",
                        "visudreamI": "Current",
                        "visudreamPf": "Power factor",
                        "visudreamFreq": "Frequency",
                        "HTU21D": "I2C Humidity Sensor by MEAS",
                        "TSL2561": "I2C Light Sensor by TAOS Inc.",
                        "BH1750": "I2C Light Sensor byROHM Co.",
                        "sensorTagHum": "TI Sensor Tag, Humidity only",
                        "sensorTagWobble": "TI Sensor Tag; wobble: 'on', no wobble: 'off'",
                        "passiveInfrared": "motion: 'on', no motion: 'off'",
                        "normallyOpen": "open: 'off', close: 'on'",
                        "normallyClose": "open: 'on', close: 'off'",
                        "dht11": "Humidity sensor",
                        "dht22": "Humidity sensor(higher accurate)"
                      },
                      "supportedNetworks": {
                        "serial": "{serial type}{port}  USB0 for /dev/ttyUSB0, O1 for /dev/ttyO1",
                        "visudream": "{ip_address}:{port} e.g. 192.168.0.11:5001",
                        "libelium": "{device address} Waspmote address found at id_wasp field in DB",
                        "foscam": "{ip_address}:{port} e.g. 192.168.0.11:88",
                        "i2c": "0x{hexa number} e.g. 0x40",
                        "uart": "{port number} e.g. 1",
                        "gpio": "{gpio number} e.g. 67"
                      },
                      "sequence": "{sequence number} e.g. 0, starts with zero, grows if more then one sensors for the same model"
                    },
                    "sequenceable": "true",
                    "upload": {
                      "FI9821WA": [
                        "snapPicture"
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-sensorDrivers",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/sensorDrivers/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "센서 드라이버 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-sensorDriver",
        "summary": "Get SensorDriver",
        "tags": [
          "Sensordrivers",
          "SensorDrivers"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensordriver-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "supportedNetworks": [
                    "daliworks"
                  ],
                  "ctime": "1489645347197",
                  "driverName": "advanwiseActuator",
                  "category": "actuator",
                  "models": [
                    "advanwiseLed"
                  ],
                  "mtime": "1489645347197",
                  "id": "advanwiseActuator",
                  "idTemplate": "{gatewayId}-{deviceAddress}-{type}",
                  "displayName": "Advanwise Actuator",
                  "commands": {
                    "advanwiseLed": {
                      "on": [],
                      "off": []
                    }
                  },
                  "discoverable": "false",
                  "contentType": {
                    "advanwiseLed": {
                      "properties": {
                        "cmd": {
                          "type": "string"
                        },
                        "result": {
                          "type": "string",
                          "enum": [
                            "success",
                            "error"
                          ]
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "number"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "display": [
                        "cmd"
                      ]
                    }
                  },
                  "addressable": "true",
                  "dataTypes": {
                    "advanwiseLed": [
                      "led"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-sensorDriver",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-gateway",
        "summary": "Get Gateway",
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/gateway-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "sensors": [
                    "b827ebda7b2a-0-string",
                    "b827ebda7b2a-0-temp",
                    "b827ebda7b2a-0-humi",
                    "b827ebda7b2a-0-light",
                    "b827ebda7b2a-0-sound",
                    "b827ebda7b2a-0-relay",
                    "b827ebda7b2a-0-buzz",
                    "b827ebda7b2a-0-led",
                    "b827ebda7b2a-0-button",
                    "b827ebda7b2a-0-ultra",
                    "b827ebda7b2a-0-rotary",
                    "b827ebda7b2a-0-lcd"
                  ],
                  "deviceModels": [
                    {
                      "model": "GrovePiPlusStarterKitForRaspberryPi"
                    }
                  ],
                  "name": "heesberryGW",
                  "ctime": "1491370577929",
                  "status": "status.gateway.qMdXIb",
                  "tree": "b827ebda7b2a",
                  "mtime": "1491370613748",
                  "_service": "0",
                  "autoCreateDiscoverable": "y",
                  "_site": "0",
                  "reportInterval": "300000",
                  "devices": [
                    "b827ebda7b2a-0"
                  ],
                  "model": "18",
                  "id": "b827ebda7b2a"
                }
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": "Access denied"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-gateway",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-gateway",
        "summary": "Update Gateway",
        "tags": [
          "Gateways"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/gateway-for-put"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/gateway-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "sensors": [
                    "b827ebda7b2a-0-string",
                    "b827ebda7b2a-0-temp",
                    "b827ebda7b2a-0-humi",
                    "b827ebda7b2a-0-light",
                    "b827ebda7b2a-0-sound",
                    "b827ebda7b2a-0-relay",
                    "b827ebda7b2a-0-buzz",
                    "b827ebda7b2a-0-led",
                    "b827ebda7b2a-0-button",
                    "b827ebda7b2a-0-ultra",
                    "b827ebda7b2a-0-rotary",
                    "b827ebda7b2a-0-lcd"
                  ],
                  "deviceModels": [
                    {
                      "model": "GrovePiPlusStarterKitForRaspberryPi"
                    }
                  ],
                  "name": "heesberryGW",
                  "ctime": "1491370577929",
                  "status": "status.gateway.qMdXIb",
                  "tree": "b827ebda7b2a",
                  "mtime": "1491370613748",
                  "_service": "0",
                  "autoCreateDiscoverable": "y",
                  "_site": "0",
                  "reportInterval": "300000",
                  "devices": [
                    "b827ebda7b2a-0"
                  ],
                  "model": "18",
                  "id": "b827ebda7b2a"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-gateway",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "delete": {
        "operationId": "DELETE-gateway",
        "summary": "Delete Gateway",
        "tags": [
          "Gateways"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/common-response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "DELETE-gateway",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways": {
      "get": {
        "operationId": "LIST-gateways",
        "summary": "List Gateways",
        "tags": [
          "Gateways"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/gateway-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "id": "aaaabbbbcccd",
                    "model": "26",
                    "ctime": "1490930982268",
                    "tree": "aaaabbbbcccd",
                    "devices": [
                      "aaaabbbbcccd"
                    ],
                    "reportInterval": "1800000",
                    "_service": "1",
                    "mtime": "1490930982364",
                    "deviceModels": [
                      {
                        "model": "B300",
                        "id": "aaaabbbbcccd"
                      }
                    ],
                    "_site": "1",
                    "status": "status.gateway.qMdXIb",
                    "autoCreateDiscoverable": "n",
                    "sensors": [
                      "power-aaaabbbbcccd-1",
                      "b827ebda7b2a-0-temp",
                      "b827ebda7b2a-0-humi",
                      "b827ebda7b2a-0-light",
                      "b827ebda7b2a-0-sound",
                      "b827ebda7b2a-0-relay",
                      "b827ebda7b2a-0-buzz",
                      "b827ebda7b2a-0-led",
                      "b827ebda7b2a-0-button",
                      "b827ebda7b2a-0-ultra",
                      "b827ebda7b2a-0-rotary",
                      "b827ebda7b2a-0-lcd"
                    ],
                    "name": "safelocker subpm"
                  },
                  {
                    "id": "999509a758d1471daea081d866f294ef",
                    "devices": [
                      "4545397575a844f8ae85ef5ff1a072d3"
                    ],
                    "ctime": "1491294937009",
                    "tree": "999509a758d1471daea081d866f294ef",
                    "model": "6",
                    "reportInterval": "3600000",
                    "mtime": "1491370461507",
                    "_service": "0",
                    "deviceModels": [
                      {
                        "id": "4545397575a844f8ae85ef5ff1a072d3",
                        "model": "statistics"
                      }
                    ],
                    "_site": "0",
                    "status": "status.gateway.8hw2wi",
                    "virtual": "y",
                    "sensors": [
                      "gatewaysCounter-999509a758d1471daea081d866f294ef",
                      "sensorsCounter-999509a758d1471daea081d866f294ef"
                    ],
                    "name": "VirtualGatewayBasic2"
                  },
                  {
                    "id": "777f869932564e4aa6b937a2a7f9cc2e",
                    "devices": [
                      "88b29846844345b3b4317fd8558a9027",
                      "b74bd03d91bc4be387998141df679ea4",
                      "f4a273af0d584df6a6e75776289555c6"
                    ],
                    "model": "6",
                    "ctime": "1491287488949",
                    "tree": "777f869932564e4aa6b937a2a7f9cc2e",
                    "virtual": "y",
                    "reportInterval": "3600000",
                    "mtime": "1491799534493",
                    "_service": "0",
                    "deviceModels": [
                      {
                        "id": "88b29846844345b3b4317fd8558a9027",
                        "model": "emulator"
                      },
                      {
                        "id": "b74bd03d91bc4be387998141df679ea4",
                        "model": "powerEmulator"
                      },
                      {
                        "id": "f4a273af0d584df6a6e75776289555c6",
                        "model": "weather"
                      }
                    ],
                    "_site": "0",
                    "status": "status.gateway.SvLFSu",
                    "autoCreateDiscoverable": "n",
                    "sensors": [
                      "humidity-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "count-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "countEvent-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "color-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "co2-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "co-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "dust-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "location-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "power-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "power-777f869932564e4aa6b937a2a7f9cc2e-2",
                      "onoff-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "number-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "temperature-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "parkingStatus-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "windVane-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "string-777f869932564e4aa6b937a2a7f9cc2e-1",
                      "power-777f869932564e4aa6b937a2a7f9cc2e-3",
                      "power-777f869932564e4aa6b937a2a7f9cc2e-4",
                      "temperatureOpenAPI-777f869932564e4aa6b937a2a7f9cc2e",
                      "humidityOpenAPI-777f869932564e4aa6b937a2a7f9cc2e"
                    ],
                    "name": "heeVirtualGatewayBasic"
                  },
                  {
                    "ctime": "1491286585956",
                    "_service": "0",
                    "reportInterval": "300000",
                    "id": "bbccddeeffaa",
                    "deviceModels": [
                      {
                        "model": "jsonrpcFullV1.0"
                      }
                    ],
                    "name": "OpenSrouceGateway2",
                    "_site": "0",
                    "tree": "bbccddeeffaa",
                    "autoCreateDiscoverable": "y",
                    "mtime": "1491286586091",
                    "model": "34"
                  },
                  {
                    "id": "709bc4eb28294d289882ff13b3bf44e3",
                    "devices": [
                      "b3886258ff0a477884296805ce452f61"
                    ],
                    "model": "32",
                    "ctime": "1491284944260",
                    "tree": "709bc4eb28294d289882ff13b3bf44e3",
                    "virtual": "y",
                    "reportInterval": "1200000",
                    "mtime": "1491370461805",
                    "_service": "0",
                    "deviceModels": [
                      {
                        "id": "b3886258ff0a477884296805ce452f61",
                        "model": "sensorSimulator"
                      }
                    ],
                    "_site": "0",
                    "status": "status.gateway._P5Imm",
                    "autoCreateDiscoverable": "n",
                    "sensors": [
                      "temperatureDaliworks-709bc4eb28294d289882ff13b3bf44e3",
                      "humidityDaliworks-709bc4eb28294d289882ff13b3bf44e3",
                      "onoff-709bc4eb28294d289882ff13b3bf44e3-1"
                    ],
                    "name": "SimulBasic"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": "Access denied"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "name": "JsonWebTokenError",
                "message": "jwt malformed"
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-gateways",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/devices/{id}": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "description": "디바이스 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-gateway-devices",
        "summary": "Get Gateway-devices",
        "tags": [
          "Gateway-devices"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/device-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "name": "ESP8266",
                  "model": "groveArduinoKit1.0",
                  "owner": "5ccf7f1dfac1",
                  "mtime": "1480667758276",
                  "ctime": "1480667758275",
                  "id": "5ccf7f1dfac1-gsk10",
                  "address": "0"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-gateway-devices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-gateway-devices",
        "summary": "Update Gateway-devices",
        "tags": [
          "Gateway-devices"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/device-input",
              "example": {
                "name": "SensorEmulDevice",
                "model": "emulator",
                "owner": "777f869932564e4aa6b937a2a7f9cc2e",
                "mtime": "1491292526321",
                "ctime": "1491287488966",
                "id": "88b29846844345b3b4317fd8558a9027"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/device-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "name": "SensorEmulDevice",
                  "model": "emulator",
                  "owner": "777f869932564e4aa6b937a2a7f9cc2e",
                  "mtime": "1491792969795",
                  "ctime": "1491287488966",
                  "id": "88b29846844345b3b4317fd8558a9027"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-gateway-devices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "delete": {
        "operationId": "DELETE-gateway-devices",
        "summary": "Delete Gateway-devices",
        "tags": [
          "Gateway-devices"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/common-response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "DELETE-gateway-devices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/devices": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "LIST-gateway-devices",
        "summary": "List Gateway-devices",
        "tags": [
          "Gateway-devices"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/device-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "name": "ESP8266",
                    "model": "groveArduinoKit1.0",
                    "owner": "5ccf7f1dfac1",
                    "mtime": "1480667758276",
                    "ctime": "1480667758275",
                    "id": "5ccf7f1dfac1-gsk10",
                    "address": "0"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-gateway-devices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "post": {
        "operationId": "POST-gateway-devices",
        "summary": "Create Gateway-devices",
        "tags": [
          "Gateway-devices"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "reqId": {
                      "type": "string",
                      "description": "device의 id로 지정되길 바라는 값. 동일한 ID가 있다면 거절 될 수 있다."
                    }
                  },
                  "required": [
                    "reqId",
                    "name",
                    "model"
                  ]
                },
                {
                  "$ref": "#/definitions/device-input"
                }
              ],
              "example": {
                "reqId": "f4a273af0d584df6a6e75776289555c6",
                "name": "MyWeatherDevice",
                "model": "weather"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/device-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "name": "MyWeatherDevice",
                  "model": "weather",
                  "owner": "777f869932564e4aa6b937a2a7f9cc2e",
                  "mtime": 1491799533961,
                  "ctime": 1491799533961,
                  "id": "f4a273af0d584df6a6e75776289555c6"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST-gateway-devices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/sensors/{id}": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "description": "센서 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-gateway-sensors",
        "summary": "Get Gateway-sensors",
        "tags": [
          "Gateway-sensors"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "network": "daliworks",
                  "driverName": "daliworksWeather",
                  "model": "humidityDaliworks",
                  "type": "humidity",
                  "category": "sensor",
                  "name": "humidity_2",
                  "deviceId": "ebcf17cdbb39438a858b099cdf240611",
                  "owner": "af135c176df24ed9a57497b1bdf7fef7",
                  "mtime": "1490251092738",
                  "ctime": "1490251092736",
                  "id": "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4",
                  "virtual": "y",
                  "series": "series.sensor.1RBNkw",
                  "status": "status.sensor.gw45tL",
                  "sequence": "1",
                  "address": "0",
                  "options": {
                    "notification": "true"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-gateway-sensors",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-gateway-sensors",
        "summary": "Update Gateway-sensors",
        "tags": [
          "Gateway-sensors"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/sensor",
              "example": {
                "network": "daliworks",
                "driverName": "daliworksEmulator",
                "model": "humidityEmulator",
                "sequence": "1",
                "type": "humidity",
                "category": "sensor",
                "name": "humidity_1",
                "deviceId": "27b61309b5c643358e4b43fff1cb62fa",
                "virtual": "y",
                "owner": "8683bbca9bf249078c81687fac9b778f"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "network": "daliworks",
                  "driverName": "daliworksEmulator",
                  "model": "doorEmulator",
                  "sequence": "1",
                  "type": "onoff",
                  "category": "sensor",
                  "name": "myonoff_1",
                  "deviceId": "88b29846844345b3b4317fd8558a9027",
                  "virtual": "y",
                  "owner": "777f869932564e4aa6b937a2a7f9cc2e",
                  "mtime": "1491794379051",
                  "ctime": "1491792970005",
                  "series": "series.sensor.MwKo9J",
                  "status": "status.sensor.-qbJwg",
                  "id": "onoff-777f869932564e4aa6b937a2a7f9cc2e-1"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-gateway-sensors",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "delete": {
        "operationId": "DELETE-gateway-sensors",
        "summary": "Delete Gateway-sensors",
        "tags": [
          "Gateway-sensors"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/common-response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "DELETE-gateway-sensors",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/sensors": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "LIST-gateway-sensors",
        "summary": "List Gateway-sensors",
        "tags": [
          "Gateway-sensors"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sensor-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "network": "daliworks",
                    "driverName": "daliworksWeather",
                    "model": "humidityDaliworks",
                    "type": "humidity",
                    "category": "sensor",
                    "name": "humidity_2",
                    "deviceId": "ebcf17cdbb39438a858b099cdf240611",
                    "owner": "af135c176df24ed9a57497b1bdf7fef7",
                    "mtime": "1490251092738",
                    "ctime": "1490251092736",
                    "id": "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4",
                    "virtual": "y",
                    "series": "series.sensor.1RBNkw",
                    "status": "status.sensor.gw45tL",
                    "sequence": "1",
                    "address": "0",
                    "options": {
                      "notification": "true"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": "Access denied"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-gateway-sensors",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "post": {
        "operationId": "POST-gateway-sensors",
        "summary": "Create Gateway-sensors",
        "tags": [
          "Gateway-sensors"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/sensor-input",
              "example": {
                "network": "daliworks",
                "driverName": "daliworksEmulator",
                "model": "doorEmulator",
                "sequence": "1",
                "type": "onoff",
                "category": "sensor",
                "name": "onoff_1",
                "reqId": "onoff-777f869932564e4aa6b937a2a7f9cc2e-1",
                "deviceId": "88b29846844345b3b4317fd8558a9027",
                "virtual": "y"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "network": "daliworks",
                  "driverName": "daliworksEmulator",
                  "model": "doorEmulator",
                  "sequence": "1",
                  "type": "onoff",
                  "category": "sensor",
                  "name": "onoff_1",
                  "deviceId": "88b29846844345b3b4317fd8558a9027",
                  "virtual": "y",
                  "owner": "777f869932564e4aa6b937a2a7f9cc2e",
                  "mtime": 1491792970005,
                  "ctime": 1491792970005,
                  "id": "onoff-777f869932564e4aa6b937a2a7f9cc2e-1"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST-gateway-sensors",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateway/{id}/status": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "게이트웨이의 Id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-gateway-status",
        "summary": "Get Gateway-status",
        "tags": [
          "thingplus",
          "Gateway-status"
        ],
        "description": "게이트웨이의 최근 상태값",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/gateway-status-output"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "$ref": "#/definitions/gateway-status-status"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_service": "1",
                  "autoCreateDiscoverable": "n",
                  "mtime": "1490941631622",
                  "_site": "1",
                  "ctime": "1490929829618",
                  "devices": [
                    "aaaabbbbcccc"
                  ],
                  "status": {
                    "type": "status",
                    "value": "off",
                    "srcDbType": "gateway",
                    "time": "1490941631599",
                    "expireAt": "1490942631599",
                    "vtime": "1490941631599",
                    "status": "aaaabbbbcccc",
                    "owner": "aaaabbbbcccc",
                    "gateway": "aaaabbbbcccc",
                    "mtime": "1490941631620",
                    "ctime": "1490941631620",
                    "id": "status.gateway.-AdUxV"
                  },
                  "name": "safelocker pm",
                  "tree": "aaaabbbbcccc",
                  "sensors": [
                    "power-aaaabbbbcccc-1",
                    "electricPower-aaaabbbbcccc-1",
                    "powerControllerState-aaaabbbbcccc-1",
                    "powerController-aaaabbbbcccc-1"
                  ],
                  "deviceModels": [
                    {
                      "id": "aaaabbbbcccc",
                      "model": "B300"
                    }
                  ],
                  "reportInterval": "1800000",
                  "model": "26",
                  "id": "aaaabbbbcccc"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-gateway-status",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-gateway-status",
        "summary": "Update Gateway-status",
        "tags": [
          "thingplus",
          "Gateway-status"
        ],
        "description": "게이트웨이의 상태값 업데이트",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/gateway-status-input",
              "example": {
                "timeout": 1000,
                "value": "on"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/gateway-status-output"
                        },
                        {
                          "properties": {
                            "status": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_service": "1",
                  "autoCreateDiscoverable": "n",
                  "mtime": "1490941631622",
                  "_site": "1",
                  "ctime": "1490929829618",
                  "devices": [
                    "aaaabbbbcccc"
                  ],
                  "status": "status.gateway.-AdUxV",
                  "name": "safelocker pm",
                  "tree": "aaaabbbbcccc",
                  "sensors": [
                    "power-aaaabbbbcccc-1",
                    "electricPower-aaaabbbbcccc-1",
                    "powerControllerState-aaaabbbbcccc-1",
                    "powerController-aaaabbbbcccc-1"
                  ],
                  "deviceModels": [
                    {
                      "id": "aaaabbbbcccc",
                      "model": "B300"
                    }
                  ],
                  "reportInterval": "1800000",
                  "model": "26",
                  "id": "aaaabbbbcccc"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-gateway-status",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/sensors/{id}/status": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "description": "센서 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-sensor-status",
        "summary": "Get Sensor-status",
        "tags": [
          "thingplus",
          "Sensor-status"
        ],
        "description": "해당 센서의 최근 상태 값",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-status-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "network": "daliworks",
                  "driverName": "genericSensor",
                  "model": "genericPower",
                  "sequence": "1",
                  "type": "power",
                  "category": "sensor",
                  "name": "power_1",
                  "deviceId": "aaaabbbbcccc",
                  "owner": "aaaabbbbcccc",
                  "mtime": "1490947031778",
                  "ctime": "1490929829642",
                  "status": {
                    "type": "status",
                    "value": "on",
                    "srcType": "power",
                    "srcCategory": "sensor",
                    "srcDbType": "sensor",
                    "time": "1490947031771",
                    "expireAt": "1490957031771",
                    "vtime": "1490947031771",
                    "status": "power-aaaabbbbcccc-1",
                    "owner": "aaaabbbbcccc",
                    "sensor": "power-aaaabbbbcccc-1",
                    "mtime": "1490947031773",
                    "ctime": "1490947031773",
                    "id": "status.sensor.1AxqrU"
                  },
                  "id": "power-aaaabbbbcccc-1"
                },
                "value": "on",
                "timeout": 10000
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-sensor-status",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-sensor-status",
        "summary": "Update Sensor-status",
        "tags": [
          "thingplus",
          "Sensor-status"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/sensor-status-input",
              "example": {
                "value": "on",
                "timeout": 10000
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-status-status"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "type": "status",
                  "value": "on",
                  "srcType": "temperature",
                  "srcCategory": "sensor",
                  "srcDbType": "sensor",
                  "time": "1492666149961",
                  "expireAt": "1492666239961",
                  "vtime": "1492577384029",
                  "status": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
                  "owner": "914af1c57e5a4caf8ab42756cddb5267",
                  "sensor": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
                  "mtime": "1492666149961",
                  "ctime": "1492577384029",
                  "id": "status.sensor.DuFYPl"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-sensor-status",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/gateways/{owner}/sensors/{id}/series": {
      "parameters": [
        {
          "name": "owner",
          "in": "path",
          "description": "게이트웨이 id",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "description": "센서 id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-sensor-series",
        "summary": "Get Sensor-series",
        "tags": [
          "thingplus",
          "Sensor-series"
        ],
        "description": "해당 센서의 최근 값",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-series-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "network": "daliworks",
                  "driverName": "genericSensor",
                  "model": "genericPower",
                  "sequence": "1",
                  "type": "power",
                  "category": "sensor",
                  "name": "power_1",
                  "deviceId": "aaaabbbbcccc",
                  "owner": "aaaabbbbcccc",
                  "mtime": "1490949614516",
                  "ctime": "1490929829642",
                  "status": "status.sensor.1AxqrU",
                  "series": {
                    "type": "series",
                    "value": "123",
                    "time": "1490949603294",
                    "srcType": "power",
                    "srcCategory": "sensor",
                    "srcDbType": "sensor",
                    "series": "power-aaaabbbbcccc-1",
                    "owner": "aaaabbbbcccc",
                    "sensor": "power-aaaabbbbcccc-1",
                    "mtime": "1490949614514",
                    "ctime": "1490949614514",
                    "id": "series.sensor.RZhUBX"
                  },
                  "id": "power-aaaabbbbcccc-1"
                },
                "value": "123",
                "time": 1490949603294
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-sensor-series",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-sensor-series",
        "summary": "Update Sensor-series",
        "tags": [
          "thingplus",
          "Sensor-series"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/sensor-series-input"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/sensor-series-input"
                  }
                }
              ],
              "example": {
                "value": "123",
                "time": 1490949603294
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/sensor-series-series"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "type": "series",
                  "time": "1492676085914",
                  "value": "13",
                  "srcType": "temperature",
                  "srcCategory": "sensor",
                  "srcDbType": "sensor",
                  "series": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
                  "owner": "914af1c57e5a4caf8ab42756cddb5267",
                  "sensor": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
                  "mtime": "1492676093362",
                  "ctime": "1492577384028",
                  "id": "series.sensor.fddCsW"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-sensor-series",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/rules/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "rule의 ID",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-rule",
        "summary": "Get Rule",
        "tags": [
          "thingplus",
          "Rules"
        ],
        "description": "해당 ID의 rule Read",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/rule-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_user": "0",
                  "conditions": [
                    []
                  ],
                  "timezone": "+9.00",
                  "severity": "warning",
                  "_site": "0",
                  "actions": [
                    [
                      {
                        "agent": "email",
                        "type": "email",
                        "method": {
                          "name": "send",
                          "id": "send",
                          "send": {
                            "to": "chris.lee+testqc+admin@daliworks.net",
                            "subject": "Temperature over 30",
                            "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                          }
                        }
                      }
                    ]
                  ],
                  "_service": "0",
                  "mtime": "1490769625019",
                  "status": "activated",
                  "name": "sample rule",
                  "trigger": {
                    "agent": "sensorValue",
                    "type": "temperature",
                    "method": {
                      "name": "Over",
                      "id": "over",
                      "over": {
                        "degree": 30,
                        "target": {
                          "type": "gateway",
                          "id": "3b3932ac963b4e81948445ae8c20fb16",
                          "sensors": [
                            "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                          ]
                        }
                      }
                    },
                    "filter": {
                      "type": [
                        "series"
                      ],
                      "gateway": "*",
                      "sensor": [
                        "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                      ]
                    }
                  },
                  "ctime": "1490769625019",
                  "id": "972"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-rule",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": true,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-rule",
        "summary": "Update Rule",
        "tags": [
          "Rules"
        ],
        "description": "해당 ID의 Rule Update",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/rule-input",
              "example": {
                "severity": "warning",
                "_service": "0",
                "ctime": "1490769625019",
                "timezone": "+9.00",
                "_user": "0",
                "mtime": "1490769625019",
                "_site": "0",
                "status": "activated",
                "actions": [
                  [
                    {
                      "agent": "email",
                      "type": "email",
                      "method": {
                        "name": "send",
                        "id": "send",
                        "params": {
                          "to": "chris.lee+testqc+admin@daliworks.net",
                          "subject": "Temperature over 30",
                          "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                        }
                      }
                    }
                  ]
                ],
                "name": "sample rule",
                "trigger": {
                  "agent": "sensorValue",
                  "type": "temperature",
                  "method": {
                    "name": "Over",
                    "id": "over",
                    "params": {
                      "degree": 30,
                      "target": {
                        "type": "gateway",
                        "id": "3b3932ac963b4e81948445ae8c20fb16",
                        "sensors": [
                          "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                        ]
                      }
                    }
                  },
                  "filter": {
                    "type": [
                      "series"
                    ],
                    "gateway": "*",
                    "sensor": [
                      "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/rule-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_user": "0",
                  "conditions": [
                    []
                  ],
                  "timezone": "+9.00",
                  "severity": "warning",
                  "_site": "0",
                  "actions": [
                    [
                      {
                        "agent": "email",
                        "type": "email",
                        "method": {
                          "name": "send",
                          "id": "send",
                          "params": {
                            "to": "chris.lee+testqc+admin@daliworks.net",
                            "subject": "Temperature over 30",
                            "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                          }
                        }
                      }
                    ]
                  ],
                  "_service": "0",
                  "mtime": "1490769625019",
                  "status": "activated",
                  "name": "sample rule",
                  "trigger": {
                    "agent": "sensorValue",
                    "type": "temperature",
                    "method": {
                      "name": "Over",
                      "id": "over",
                      "params": {
                        "degree": 30,
                        "target": {
                          "type": "gateway",
                          "id": "3b3932ac963b4e81948445ae8c20fb16",
                          "sensors": [
                            "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                          ]
                        }
                      }
                    },
                    "filter": {
                      "type": [
                        "series"
                      ],
                      "gateway": "*",
                      "sensor": [
                        "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                      ]
                    }
                  },
                  "ctime": "1490769625019",
                  "id": "972"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-rule",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "delete": {
        "operationId": "DELETE-rule",
        "summary": "Delete Rule",
        "tags": [
          "Rules"
        ],
        "description": "해당 ID의 Rule삭제",
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/common-response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "DELETE-rule",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/rules": {
      "get": {
        "operationId": "LIST-rules",
        "summary": "List Rules",
        "tags": [
          "Rules"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/rule-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "_user": "0",
                    "conditions": [
                      [
                        {
                          "agent": "sensorValue",
                          "type": "humidity",
                          "method": {
                            "name": "이상",
                            "id": "over",
                            "params": {
                              "degree": 88,
                              "target": {
                                "type": "gateway",
                                "id": "af135c176df24ed9a57497b1bdf7fff4",
                                "sensors": [
                                  "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    ],
                    "timezone": "+9.00",
                    "severity": "warning",
                    "_site": "0",
                    "actions": [
                      [
                        {
                          "agent": "actuator",
                          "type": "lcd",
                          "method": {
                            "name": "LCD 제어",
                            "id": "lcd",
                            "send": {
                              "to": "chris.lee+testqc+admin@daliworks.net",
                              "subject": "Temperature over 30",
                              "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                            },
                            "params": {
                              "command": {
                                "cmd": "clear",
                                "options": {
                                  "row": -1
                                }
                              },
                              "notificationOption": "Failure",
                              "target": {
                                "type": "gateway",
                                "id": "84eb18e1f8c3",
                                "sensors": [
                                  "84eb18e1f8c3-0-oled(12x12)"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    ],
                    "_service": "0",
                    "mtime": "1491994207394",
                    "status": "activated",
                    "name": "test check",
                    "trigger": {
                      "agent": "sensorValue",
                      "type": "temperature",
                      "method": {
                        "name": "이하",
                        "id": "under",
                        "over": {
                          "degree": 30,
                          "target": {
                            "type": "gateway",
                            "id": "3b3932ac963b4e81948445ae8c20fb16",
                            "sensors": [
                              "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                            ]
                          }
                        },
                        "params": {
                          "degree": 0,
                          "target": {
                            "type": "gateway",
                            "id": "fc81c3cc32b147a9b3654898a40bb9be",
                            "sensors": [
                              "temperature-fc81c3cc32b147a9b3654898a40bb9be-1"
                            ]
                          }
                        }
                      },
                      "filter": {
                        "type": [
                          "series"
                        ],
                        "gateway": "*",
                        "sensor": [
                          "temperature-fc81c3cc32b147a9b3654898a40bb9be-1"
                        ]
                      }
                    },
                    "ctime": "1491994207394",
                    "id": "61",
                    "desc": "aaaaa"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": "Access denied"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-rules",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "post": {
        "operationId": "POST-rule",
        "summary": "Create Rule",
        "tags": [
          "Rules"
        ],
        "description": "새로운 Rule 생성",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "timezone",
                    "status",
                    "name",
                    "severity",
                    "trigger",
                    "actions"
                  ]
                },
                {
                  "$ref": "#/definitions/rule-input"
                }
              ],
              "example": {
                "conditions": [
                  []
                ],
                "actions": [
                  [
                    {
                      "agent": "actuator",
                      "type": "led",
                      "method": {
                        "name": "LED 제어",
                        "id": "led",
                        "params": {
                          "command": {
                            "cmd": "blink",
                            "options": {
                              "duration": 7000,
                              "interval": 1500
                            }
                          },
                          "notificationOption": "Failure",
                          "target": {
                            "type": "gateway",
                            "id": "b827ebda7b2a",
                            "sensors": [
                              "b827ebda7b2a-0-led"
                            ]
                          }
                        }
                      }
                    }
                  ]
                ],
                "severity": "information",
                "timezone": "+9.00",
                "name": "buttonLED700",
                "status": "activated",
                "trigger": {
                  "agent": "sensorValue",
                  "type": "onoff",
                  "method": {
                    "name": "변경",
                    "id": "changed",
                    "params": {
                      "from": "0",
                      "to": "1",
                      "target": {
                        "type": "tag",
                        "id": "1",
                        "sensors": [
                          "b827ebda7b2a-0-button"
                        ]
                      }
                    }
                  },
                  "filter": {
                    "type": [
                      "series"
                    ],
                    "gateway": "*",
                    "sensor": [
                      "b827ebda7b2a-0-button"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/rule-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 201,
                "message": "OK",
                "data": {
                  "conditions": [
                    []
                  ],
                  "actions": [
                    [
                      {
                        "agent": "actuator",
                        "type": "led",
                        "method": {
                          "name": "LED 제어",
                          "id": "led",
                          "params": {
                            "command": {
                              "cmd": "blink",
                              "options": {
                                "duration": 7000,
                                "interval": 1500
                              }
                            },
                            "notificationOption": "Failure",
                            "target": {
                              "type": "gateway",
                              "id": "b827ebda7b2a",
                              "sensors": [
                                "b827ebda7b2a-0-led"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  ],
                  "severity": "information",
                  "timezone": "+9.00",
                  "name": "buttonLED700",
                  "status": "activated",
                  "trigger": {
                    "agent": "sensorValue",
                    "type": "onoff",
                    "method": {
                      "name": "변경",
                      "id": "changed",
                      "params": {
                        "from": "0",
                        "to": "1",
                        "target": {
                          "type": "tag",
                          "id": "1",
                          "sensors": [
                            "b827ebda7b2a-0-button"
                          ]
                        }
                      }
                    },
                    "filter": {
                      "type": [
                        "series"
                      ],
                      "gateway": "*",
                      "sensor": [
                        "b827ebda7b2a-0-button"
                      ]
                    }
                  },
                  "_user": "0",
                  "_site": "0",
                  "_service": "0",
                  "mtime": 1492682177547,
                  "ctime": 1492682177547,
                  "id": "11"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST-rule",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/pushDevices/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Google또는 Apple의 Push서버로부터 발급받은 id\n",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "operationId": "GET-pushdevices",
        "summary": "Get PushDevices",
        "tags": [
          "thingplus",
          "Pushdevices"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/pushdevices-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_user": "0",
                  "mtime": "1470908072232",
                  "provider": "g",
                  "id": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
                  "activated": "y",
                  "ctime": "1470908072232"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "GET-pushdevices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": true,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "put": {
        "operationId": "PUT-pushdevices",
        "summary": "Update PushDevices",
        "tags": [
          "Pushdevices"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/pushdevices",
              "example": {
                "provider": "g",
                "activated": "y",
                "authClientId": "clientId"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/pushdevices-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "_user": "0",
                  "mtime": "1470908072232",
                  "provider": "g",
                  "id": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
                  "activated": "y",
                  "authClientId": "11",
                  "ctime": "1470908072232"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "PUT-pushdevices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "delete": {
        "operationId": "DELETE-pushdevices",
        "summary": "Delete PushDevices",
        "tags": [
          "Pushdevices"
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/common-response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "DELETE-pushdevices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/pushDevices": {
      "get": {
        "operationId": "LIST-pushdevices",
        "summary": "List Pushdevices",
        "tags": [
          "Pushdevices"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/pushdevices-output"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": [
                  {
                    "_user": "0",
                    "mtime": "1470908072232",
                    "provider": "g",
                    "id": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
                    "activated": "y",
                    "ctime": "1470908072232"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "LIST-pushdevices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      },
      "post": {
        "operationId": "POST-pushdevices",
        "summary": "Create PushDevices",
        "tags": [
          "Pushdevices"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "reqId": {
                      "type": "string",
                      "description": "Google또는 Apple의 Push서버로부터 발급받은 id"
                    }
                  },
                  "required": [
                    "reqId",
                    "provider",
                    "activated",
                    "authClientId"
                  ]
                },
                {
                  "$ref": "#/definitions/pushdevices"
                }
              ],
              "example": {
                "reqId": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
                "provider": "g",
                "activated": "y",
                "authClientId": "clientId"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/pushdevices-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 201,
                "message": "OK",
                "data": {
                  "_user": "0",
                  "mtime": "1470908072232",
                  "provider": "g",
                  "id": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
                  "activated": "y",
                  "authClientId": "11",
                  "ctime": "1470908072232"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST-pushdevices",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/controlActuator": {
      "post": {
        "operationId": "POST-controlActuator",
        "summary": "ControlActuator",
        "tags": [
          "thingplus",
          "Non Rest APIs"
        ],
        "description": "### Actuator 실행용 API\n\n게이트웨이에 연결된 장비에게 특정 동작을 실행시키기 위해 호출하는 API.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "title": "controlActuator",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Gateway id"
                },
                "act": {
                  "type": "string",
                  "description": "게이트웨이에서 처리할 수 있는 Action id",
                  "enum": [
                    "controlActuator"
                  ]
                },
                "params": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "cmd"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "actuator id"
                    },
                    "cmd": {
                      "type": "string",
                      "description": "명령 id"
                    },
                    "options": {
                      "type": "object",
                      "description": "cmd 에 대한 파라메터."
                    }
                  }
                }
              },
              "required": [
                "id",
                "act",
                "params"
              ],
              "example": {
                "id": "aaaabbbbccce",
                "act": "controlActuator",
                "params": {
                  "id": "powerController-aaaabbbbccce-1",
                  "cmd": "print",
                  "options": {
                    "row": 1,
                    "column": 1,
                    "text": "aaa"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cmd": {
                          "type": "string",
                          "description": "request params의 cmd"
                        },
                        "result": {
                          "type": [
                            "string",
                            "object"
                          ],
                          "description": "명령수행결과 객체"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "cmd": "get",
                  "result": {
                    "electricPower": "0.00",
                    "electricEnergy": "0.07",
                    "standBy": "0.00"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST-controlActuator",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/registerGateway": {
      "post": {
        "operationId": "POST_registerGateway",
        "summary": "RegisterGateway",
        "tags": [
          "thingplus",
          "Non Rest APIs"
        ],
        "description": "### 게이트웨이 등록용 API\n\n게이트웨이와 게이트웨이에 연결된 디바이스/센서들도 한번에 등록할 수 있다.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "title": "gateway",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1,
                  "description": "게이트웨이의 id (일반적으로 게이트웨이의 mac address를 사용함)"
                },
                "params": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "siteId",
                    "model",
                    "name"
                  ],
                  "properties": {
                    "siteId": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Site id"
                    },
                    "model": {
                      "type": "string",
                      "description": "Gateway 모델명"
                    },
                    "name": {
                      "type": "string",
                      "description": "Gateway 이름"
                    },
                    "reportInterval": {
                      "type": "integer",
                      "minimum": 60000,
                      "maximum": 604800000,
                      "description": "전송주기 (ms)"
                    },
                    "location": {
                      "type": "object",
                      "description": "Gateway의 위치 정보"
                    },
                    "autoCreateDiscoverable": {
                      "type": "string",
                      "enum": [
                        "y",
                        "n"
                      ],
                      "description": "센서나 디바이스를 자동으로 검색해서 추가하는 장비인지 여부."
                    },
                    "virtual": {
                      "type": "string",
                      "enum": [
                        "y",
                        "n"
                      ],
                      "description": "가상 Gateway 여부"
                    },
                    "delegate": {
                      "type": "string",
                      "enum": [
                        "y",
                        "n"
                      ]
                    },
                    "delegateInfo": {
                      "type": "object"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "deviceModels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "model": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "model"
                        ]
                      }
                    },
                    "devices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/device-input"
                      }
                    },
                    "sensors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/sensor-input"
                      }
                    }
                  }
                }
              },
              "required": [
                "id",
                "params"
              ],
              "example": {
                "id": "af135c176df24ed9a57497b1bdf7fef4",
                "params": {
                  "name": "Sumul3",
                  "siteId": "3",
                  "model": "32",
                  "deviceModels": [
                    {
                      "id": "ebcf17cdbb39438a858b099cdf240611",
                      "model": "sensorSimulator"
                    }
                  ],
                  "virtual": "y",
                  "reportInterval": 1200000,
                  "devices": [
                    {
                      "reqId": "ebcf17cdbb39438a858b099cdf240611",
                      "name": "Simul Device 3",
                      "model": "sensorSimulator"
                    }
                  ],
                  "sensors": [
                    {
                      "network": "daliworks",
                      "driverName": "daliworksWeather",
                      "model": "humidityDaliworks",
                      "type": "humidity",
                      "category": "sensor",
                      "name": "humidity_2",
                      "reqId": "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4",
                      "deviceId": "ebcf17cdbb39438a858b099cdf240611",
                      "virtual": "y"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/registergateway-output"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 201,
                "message": "Created",
                "data": {
                  "name": "VirtualGatewayBasic2",
                  "model": "6",
                  "deviceModels": [
                    {
                      "id": "4545397575a844f8ae85ef5ff1a072d3",
                      "model": "statistics"
                    }
                  ],
                  "_site": "0",
                  "_service": "0",
                  "virtual": "y",
                  "reportInterval": 3600000,
                  "mtime": 1491294937009,
                  "ctime": 1491294937009,
                  "tree": "999509a758d1471daea081d866f294ef",
                  "id": "999509a758d1471daea081d866f294ef",
                  "devices": [
                    {
                      "name": "StatisticsDevice",
                      "model": "statistics",
                      "owner": "999509a758d1471daea081d866f294ef",
                      "mtime": 1491294937014,
                      "ctime": 1491294937014,
                      "id": "4545397575a844f8ae85ef5ff1a072d3"
                    }
                  ],
                  "sensors": [
                    {
                      "network": "daliworks",
                      "driverName": "daliworksInternal",
                      "model": "gatewaysCounter",
                      "type": "count",
                      "category": "sensor",
                      "name": "count_1",
                      "deviceId": "4545397575a844f8ae85ef5ff1a072d3",
                      "virtual": "y",
                      "owner": "999509a758d1471daea081d866f294ef",
                      "mtime": 1491294937024,
                      "ctime": 1491294937024,
                      "id": "gatewaysCounter-999509a758d1471daea081d866f294ef"
                    },
                    {
                      "network": "daliworks",
                      "driverName": "daliworksInternal",
                      "model": "sensorsCounter",
                      "type": "count",
                      "category": "sensor",
                      "name": "count_2",
                      "deviceId": "4545397575a844f8ae85ef5ff1a072d3",
                      "virtual": "y",
                      "owner": "999509a758d1471daea081d866f294ef",
                      "mtime": 1491294937036,
                      "ctime": 1491294937036,
                      "id": "sensorsCounter-999509a758d1471daea081d866f294ef"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST_registerGateway",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/registerGatewayKey": {
      "post": {
        "operationId": "POST_registerGatewayKey",
        "summary": "RegisterGatewayKey",
        "tags": [
          "Non Rest APIs"
        ],
        "description": "### 게이트웨이 APIKey 등록 API\n\n이 API의 응답 결과는 `authType` 에 따라 달라집니다.\n\n1. `authType` 이 \"apikey\" 인 경우는 다음과 같은 결과가 옵니다.\n\n```json\n{\n  \"statusCode\": 200,\n  \"message\": \"OK\",\n  \"data\": {\n    \"b827ebda7b2a\": \"Pe1cNykOna6VpVQoFyNfkVsBFdU=\"\n  }\n}\n```\ndata 객체의 키 부분(\"b827ebda7b2a\")은 게이트웨이의 id 이며,\n값 부분(\"Pe1cNykOna6VpVQoFyNfkVsBFdU=\") 은 apikey 입니다.\n\n\n2. `authType`이 \"cert\" 인경우는 인증서 파일이 다운로드 됩니다.\n\n3. `authType`이 \"apikeyReady\", 응답 결과에 data가 없이 성공 여부만 오게 됩니다.\n```json\n{\n  \"statusCode\": 200,\n  \"message\": \"OK\"\n}\n```",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "title": "registerGatewayKey",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1,
                  "description": "게이트웨이의 id (일반적으로 게이트웨이의 mac address)"
                },
                "authType": {
                  "type": "string",
                  "enum": [
                    "apikey",
                    "apikeyReady",
                    "cert"
                  ],
                  "description": "인증 종류"
                },
                "modelId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "모델 id"
                },
                "passphrase": {
                  "type": "string",
                  "minLength": 1,
                  "description": "authType이 cert일 때, cert를 만들 password"
                }
              },
              "required": [
                "id",
                "authType",
                "modelId"
              ],
              "example": {
                "id": "b827ebda7b2a",
                "modelId": "18",
                "authType": "apikey"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "description": "API 키 정보를 담은 객체로 다음과 같은 형식임.\n{ '게이트웨이 id': 'API 키' }\n\n예)\n{\"b827ebda7b2a\":\"Pe1cNykOna6VpVQoFyNfkVsBFdU=\"}",
                      "properties": {
                        "": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "b827ebda7b2a": "Pe1cNykOna6VpVQoFyNfkVsBFdU="
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST_registerGatewayKey",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/activateGatewayKey": {
      "post": {
        "operationId": "POST_root",
        "summary": "ActivateGatewayKey",
        "tags": [
          "Non Rest APIs"
        ],
        "description": "### Gateway의 API Key 활성화를 위한 API\n\nGateway의 API Key 등록 주체와 활성화 시킬 주체가 다른 경우 사용하는 API로 RegisterGatewayKey 를 통해서 apikeyReady 요청을 해두고,\n이 API로 활성화 시키면 해당 Gateway 에서 API를 사용할 수 있게 됨.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "title": "activateGatewayKey",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "gatewayId": {
                  "type": "string",
                  "minLength": 1,
                  "description": "게이트웨이 아이디"
                },
                "vendorKey": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Thing+ 가 사전 발급해준 vendor고유 키값\nex) m1UDlX6j1C6TF5UVIujtSH6L5sg="
                }
              },
              "required": [
                "gatewayId",
                "vendorKey"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "API 키 정보를 담은 객체로 다음과 같은 형식임.\n{ '게이트웨이 id': 'API 키' }\n\n예)\n{\"b827ebda7b2a\":\"Pe1cNykOna6VpVQoFyNfkVsBFdU=\"}"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "b827ebda7b2a": "Pe1cNykOna6VpVQoFyNfkVsBFdU="
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST_root",
          "beforeScript": null,
          "afterScript": null,
          "public": true,
          "mock": {
            "enabled": false,
            "dynamic": false,
            "statusCode": 200
          }
        }
      }
    },
    "/manageGateway": {
      "post": {
        "operationId": "POST_manageGateway",
        "summary": "ManageGateway",
        "tags": [
          "Non Rest APIs"
        ],
        "description": "### 게이트웨이가 수행할 동작을 보내기 위한 API",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "minLength": 1,
                  "description": "게이트웨이 id"
                },
                "act": {
                  "type": "string",
                  "minLength": 1,
                  "description": "게이트웨이가 수행할 명령(각 DeviceModel 별로 수행가능한 act가 다름.)\n DeviceModel.deviceMgmt.DM 참조"
                },
                "params": {
                  "type": [
                    "object",
                    "array"
                  ],
                  "description": "act 를 수행하기 위한 파라메터 (act의 종류에 따라 달라질 수 있음)",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "cmd": {
                      "type": "string",
                      "minLength": 1
                    },
                    "options": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "id",
                    "cmd"
                  ]
                }
              },
              "required": [
                "id",
                "act"
              ],
              "example": {
                "id": "abcdabcdabcd",
                "act": "getProperty",
                "params": [
                  "ip"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/common-response"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "게이트웨이에 수행할 act에 대한 응답객체. (각 act별로 다름)"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "statusCode": 200,
                "message": "OK",
                "data": {
                  "stdout": "requireRestart"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-stoplight": {
          "id": "POST_manageGateway",
          "beforeScript": null,
          "afterScript": null,
          "public": false,
          "mock": {
            "statusCode": 200,
            "dynamic": false,
            "enabled": false
          }
        }
      }
    }
  },
  "definitions": {
    "thingplus/user": {
      "title": "user",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ctime": {
          "type": [
            "number",
            "string"
          ],
          "maxLength": 15
        },
        "mtime": {
          "type": [
            "number",
            "string"
          ],
          "maxLength": 15
        },
        "_service": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "_site": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "__aclSite": {
          "type": "string"
        },
        "__aclService": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "loginId": {
          "type": "string"
        },
        "__password": {
          "type": "string"
        },
        "verifiedEmail": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing": {
          "type": "string"
        },
        "billingLimit": {
          "type": "string"
        },
        "billingMeter": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessApproval": {
          "type": "string",
          "enum": [
            "allow",
            "deny"
          ]
        },
        "billingCurrent": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "example": {
        "id": "1",
        "ctime": 1490251985888,
        "mtime": 1490251912345,
        "_service": "1",
        "_site": "123",
        "__aclSite": "enim consequat",
        "__aclService": "et officia tempor velit",
        "timezone": "+9.00",
        "locale": "ko",
        "country": "kr",
        "nickname": "mynickname",
        "loginId": "steave1234",
        "__password": "aute nisi deserunt eu elit",
        "verifiedEmail": "quis esse deserunt dolore",
        "email": "abcd@google.com",
        "billing": "user:1",
        "billingLimit": "user:1:limit",
        "billingMeter": "user:1:meter",
        "roles": [
          "siteAdmin",
          "user:0"
        ],
        "accessApproval": "allow",
        "billingCurrent": "user:1:current"
      },
      "x-stoplight": {
        "id": "thingplus/user",
        "name": "user",
        "public": true
      }
    },
    "sensor-input": {
      "title": "Sensor Input",
      "allOf": [
        {
          "properties": {
            "reqId": {
              "type": "string",
              "description": "센서 등록 요청 id"
            }
          },
          "required": [
            "reqId"
          ]
        },
        {
          "$ref": "#/definitions/sensor"
        }
      ],
      "example": {
        "network": "daliworks",
        "driverName": "daliworksEmulator",
        "model": "humidityEmulator",
        "sequence": "1",
        "type": "humidity",
        "category": "sensor",
        "name": "humidity_1",
        "reqId": "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4",
        "deviceId": "27b61309b5c643358e4b43fff1cb62fa",
        "virtual": "y",
        "owner": "8683bbca9bf249078c81687fac9b778f"
      },
      "x-stoplight": {
        "id": "sensor-input",
        "name": "Sensor Input",
        "public": true
      }
    },
    "gateway-status-input": {
      "title": "Gateway-status Input",
      "type": "object",
      "properties": {
        "timeout": {
          "type": "integer",
          "description": "status유효 기간 (단위: seconds)"
        },
        "value": {
          "type": "string",
          "enum": [
            "on",
            "off",
            "err"
          ],
          "description": "상태값 "
        }
      },
      "required": [
        "timeout",
        "value"
      ],
      "example": {
        "timeout": 1000,
        "value": "on"
      },
      "x-stoplight": {
        "id": "gateway-status-input",
        "name": "Gateway-status Input",
        "public": true
      }
    },
    "sensor-series-input": {
      "title": "Sensor-series Input",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "센서의 값"
        },
        "time": {
          "type": "integer",
          "description": "측정 (전송) 시간 milliseconds since 1970/01/01"
        }
      },
      "required": [
        "value",
        "time"
      ],
      "example": {
        "value": "123",
        "time": 1490949603294
      },
      "x-stoplight": {
        "id": "sensor-series-input",
        "name": "Sensor-series Input",
        "public": true
      }
    },
    "sensor-output": {
      "title": "Sensor Output",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "센서 고유 ID"
            },
            "status": {
              "type": "string",
              "description": "센서 status리소스의 id"
            },
            "series": {
              "type": "string",
              "description": "센서 series리소스의 id"
            },
            "owner": {
              "type": "string",
              "description": "센서를 소유한 게이트웨이 ID"
            }
          }
        },
        {
          "$ref": "#/definitions/sensor"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "network": "daliworks",
        "driverName": "daliworksEmulator",
        "model": "humidityEmulator",
        "sequence": "1",
        "type": "humidity",
        "category": "sensor",
        "name": "humidity_1",
        "deviceId": "27b61309b5c643358e4b43fff1cb62fa",
        "virtual": "y",
        "owner": "8683bbca9bf249078c81687fac9b778f",
        "mtime": "1490699537951",
        "ctime": "1490699532915",
        "series": "series.sensor.QBmJ3H",
        "status": "status.sensor.re5-Km",
        "id": "humidity-8683bbca9bf249078c81687fac9b778f-1"
      },
      "x-stoplight": {
        "id": "sensor-output",
        "name": "Sensor Output",
        "public": true
      }
    },
    "sensor-status-input": {
      "title": "Sensor-status Input",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "센서의 status 값"
        },
        "timeout": {
          "type": "integer",
          "description": "해당 status의 유지 시간"
        }
      },
      "required": [
        "value",
        "timeout"
      ],
      "example": {
        "value": "on",
        "timeout": 10000
      },
      "x-stoplight": {
        "id": "sensor-status-input",
        "name": "Sensor-status Input",
        "public": true
      }
    },
    "pushdevices-output": {
      "title": "PushDevices Output",
      "allOf": [
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "Push Device id(Google또는 Apple의 Push서버로부터 발급받은 id)"
            },
            "_user": {
              "type": "string",
              "description": "사용자 id"
            }
          }
        },
        {
          "$ref": "#/definitions/pushdevices"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "type": "object",
      "example": {
        "_user": "0",
        "mtime": "1470908072232",
        "provider": "g",
        "id": "eLzPpR4tWYI:APA91bFaXkFnEiiJ_usYSOCEIdH5sIGureg1kDITSvrJHQLqyuhyw7LXxJVv_IzWuQgkdWhh7DtOLfe6U_g7rOCiDT2bsPq1GxHrWRFDprV4_NGEZPCfJ-ytbDJUcDe9LxNZBbbZ3bsq",
        "activated": "y",
        "ctime": "1470908072232"
      },
      "x-stoplight": {
        "id": "pushdevices-output",
        "name": "PushDevices Output",
        "public": true
      }
    },
    "sensor-series-output": {
      "title": "Sensor-series Output",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "sensor의 고유 ID"
            },
            "status": {
              "type": "string",
              "description": "해당 status 데이터의 고유 Id"
            },
            "series": {
              "$ref": "#/definitions/sensor-series-series"
            }
          }
        },
        {
          "$ref": "#/definitions/sensor"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "statusCode": 200,
        "message": "OK",
        "data": {
          "network": "daliworks",
          "driverName": "genericSensor",
          "model": "genericPower",
          "sequence": "1",
          "type": "power",
          "category": "sensor",
          "name": "power_1",
          "deviceId": "aaaabbbbcccc",
          "owner": "aaaabbbbcccc",
          "mtime": "1490949614516",
          "ctime": "1490929829642",
          "status": "status.sensor.1AxqrU",
          "series": {
            "type": "series",
            "value": "123",
            "time": "1490949603294",
            "srcType": "power",
            "srcCategory": "sensor",
            "srcDbType": "sensor",
            "series": "power-aaaabbbbcccc-1",
            "owner": "aaaabbbbcccc",
            "sensor": "power-aaaabbbbcccc-1",
            "mtime": "1490949614514",
            "ctime": "1490949614514",
            "id": "series.sensor.RZhUBX"
          },
          "id": "power-aaaabbbbcccc-1"
        },
        "value": "123",
        "time": 1490949603294
      },
      "x-stoplight": {
        "id": "sensor-series-output",
        "name": "Sensor-series Output",
        "public": true
      }
    },
    "gateway-status-status": {
      "title": "Gateway-status Status",
      "type": [
        "string",
        "object"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "leafItem 타입",
          "enum": [
            "status",
            "series"
          ]
        },
        "value": {
          "type": "string",
          "description": "입력 받은 status 값"
        },
        "srcDbType": {
          "type": "string",
          "description": "status 값의 부모의 타입"
        },
        "time": {
          "type": "string",
          "description": "상태값 입력시 함께 입력한 시간(마지막 게이트웨이가 전송한 시각)"
        },
        "expireAt": {
          "type": "string",
          "description": "유효기간 만료 시각 (-1:만료기간 없음)\n\nepoch time."
        },
        "vtime": {
          "type": "string",
          "description": "마지막 게이트웨이 상태 변경 시각."
        },
        "status": {
          "type": "string",
          "description": "internal use only"
        },
        "owner": {
          "type": "string",
          "description": "소유 게이트웨이의 아이디(tree id)"
        },
        "gateway": {
          "type": "string",
          "description": "소유 게이트웨이의 아이디"
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "ctime": {
          "type": "string",
          "description": "생성시각"
        },
        "id": {
          "type": "string",
          "description": "해당 status 데이터의 고유 Id"
        }
      },
      "example": {
        "type": "status",
        "value": "on",
        "srcDbType": "gateway",
        "time": "1490845017607",
        "expireAt": "-1",
        "vtime": "1490845017607",
        "status": "af135c176df24ed9a57497b1bdf7fff4",
        "owner": "af135c176df24ed9a57497b1bdf7fff4",
        "gateway": "af135c176df24ed9a57497b1bdf7fff4",
        "mtime": "1490845017607",
        "ctime": "1490845017607",
        "id": "status.gateway.q2Ka7Z"
      },
      "x-stoplight": {
        "id": "gateway-status-status",
        "name": "Gateway-status Status",
        "public": true
      }
    },
    "sensor-status-output": {
      "title": "Sensor-status Output",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "sensor의 고유 ID"
            },
            "series": {
              "type": "string",
              "description": "해당 series 데이터의 고유 Id"
            },
            "status": {
              "$ref": "#/definitions/sensor-status-status"
            }
          }
        },
        {
          "$ref": "#/definitions/sensor"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "statusCode": 200,
        "message": "OK",
        "data": {
          "network": "daliworks",
          "driverName": "genericSensor",
          "model": "genericPower",
          "sequence": "1",
          "type": "power",
          "category": "sensor",
          "name": "power_1",
          "deviceId": "aaaabbbbcccc",
          "owner": "aaaabbbbcccc",
          "mtime": "1490947031778",
          "ctime": "1490929829642",
          "status": {
            "type": "status",
            "value": "on",
            "srcType": "power",
            "srcCategory": "sensor",
            "srcDbType": "sensor",
            "time": "1490947031771",
            "expireAt": "1490957031771",
            "vtime": "1490947031771",
            "status": "power-aaaabbbbcccc-1",
            "owner": "aaaabbbbcccc",
            "sensor": "power-aaaabbbbcccc-1",
            "mtime": "1490947031773",
            "ctime": "1490947031773",
            "id": "status.sensor.1AxqrU"
          },
          "id": "power-aaaabbbbcccc-1"
        }
      },
      "x-stoplight": {
        "id": "sensor-status-output",
        "name": "Sensor-status Output",
        "public": true
      }
    },
    "gateway-common": {
      "title": "Gateway",
      "allOf": [
        {
          "$ref": "#/definitions/gateway-for-put"
        },
        {
          "title": "gateway",
          "properties": {
            "id": {
              "type": "string",
              "description": "게이트웨이의 id"
            },
            "_service": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "서비스 id"
            },
            "_site": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "사이트 id"
            },
            "tree": {
              "type": "string",
              "minLength": 1,
              "description": "게이트웨이의 논리아이디(특별한 일이 없을 때는 게이트웨이 id와 같음)"
            },
            "reportInterval": {
              "type": [
                "number",
                "string"
              ],
              "minimum": 60000,
              "maximum": 604800000,
              "description": "전송주기 (ms)"
            },
            "devices": {
              "type": "array",
              "description": "게이트웨이 하위의 디바이스 목록",
              "items": {
                "type": [
                  "string",
                  "object"
                ]
              }
            },
            "sensors": {
              "type": "array",
              "description": "게이트웨이 하위의 센서 목록",
              "items": {
                "type": [
                  "string",
                  "object"
                ]
              }
            }
          }
        }
      ],
      "type": "object",
      "example": {
        "id": "1000111122334446",
        "delegateInfo": {
          "realId": "1000111122334446",
          "model": "skt_lora",
          "branchId": "ThingPlug",
          "parser": {
            "vendor": "skt_lora",
            "model": "RYU124",
            "sensors": [
              {
                "type": "temperature",
                "sequence": "1"
              },
              {
                "type": "humidity",
                "sequence": "1"
              },
              {
                "type": "light",
                "sequence": "1"
              },
              {
                "type": "stringActuator",
                "sequence": "1"
              }
            ]
          },
          "extra": {
            "AppEUI": "starterkittest"
          }
        },
        "model": "50",
        "reportInterval": 300000,
        "ctime": "1484731239233",
        "_service": "1",
        "devices": [
          "1000111122334446"
        ],
        "sensors": [
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "temperature-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239270",
            "ctime": "1484731239269",
            "delegate": "y",
            "sequence": "1",
            "type": "temperature",
            "name": "temperature_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericTemp",
            "deviceId": "1000111122334446",
            "id": "temperature-1000111122334446-1"
          },
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "humidity-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239287",
            "ctime": "1484731239286",
            "delegate": "y",
            "sequence": "1",
            "type": "humidity",
            "name": "humidity_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericHumi",
            "deviceId": "1000111122334446",
            "id": "humidity-1000111122334446-1"
          },
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "light-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239297",
            "ctime": "1484731239293",
            "delegate": "y",
            "sequence": "1",
            "type": "light",
            "name": "light_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericLight",
            "deviceId": "1000111122334446",
            "id": "light-1000111122334446-1"
          },
          {
            "category": "actuator",
            "delegateInfo": {
              "realId": "stringActuator-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1487051535184",
            "ctime": "1484731239308",
            "delegate": "y",
            "sequence": "1",
            "type": "stringActuator",
            "series": "series.sensor.BQBVq2",
            "name": "stringActuator_1",
            "driverName": "genericActuator",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericStringActuator",
            "deviceId": "1000111122334446",
            "id": "stringActuator-1000111122334446-1"
          }
        ],
        "deviceModels": [
          {
            "id": "1000111122334446",
            "model": "RYU124"
          }
        ],
        "mtime": "1487917692310",
        "_site": "1",
        "tree": "1000111122334446",
        "delegate": "y",
        "name": "ggfffggg",
        "autoCreateDiscoverable": "n"
      },
      "x-stoplight": {
        "id": "gateway-common",
        "name": "Gateway",
        "public": true
      }
    },
    "gateway-status-output": {
      "title": "Gateway-status Output",
      "allOf": [
        {
          "title": "gateway",
          "type": "object",
          "properties": {
            "status": {
              "$ref": "#/definitions/gateway-status-status"
            }
          }
        },
        {
          "$ref": "#/definitions/gateway-common"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "_service": "1",
        "mtime": "1490845017608",
        "_site": "1",
        "virtual": "y",
        "devices": [
          "ebcf17cdbb39438a858b099cdf240611"
        ],
        "ctime": "1490845012594",
        "status": {
          "type": "status",
          "value": "on",
          "srcDbType": "gateway",
          "time": "1490845017607",
          "expireAt": "-1",
          "vtime": "1490845017607",
          "status": "af135c176df24ed9a57497b1bdf7fff4",
          "owner": "af135c176df24ed9a57497b1bdf7fff4",
          "gateway": "af135c176df24ed9a57497b1bdf7fff4",
          "mtime": "1490845017607",
          "ctime": "1490845017607",
          "id": "status.gateway.q2Ka7Z"
        },
        "name": "Sumul3",
        "tree": "af135c176df24ed9a57497b1bdf7fff4",
        "sensors": [
          "humidityDaliworks-af135c176df24ed9a57497b1bdf7fef4"
        ],
        "deviceModels": [
          {
            "id": "ebcf17cdbb39438a858b099cdf240611",
            "model": "sensorSimulator"
          }
        ],
        "reportInterval": "1200000",
        "model": "32",
        "id": "af135c176df24ed9a57497b1bdf7fff4",
        "timeout": 1000,
        "value": "on"
      },
      "x-stoplight": {
        "id": "gateway-status-output",
        "name": "Gateway-status Output",
        "public": true
      }
    },
    "authclient": {
      "title": "authClient",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "클라이언트 명"
        },
        "clientSecret": {
          "type": "string",
          "description": "클라이언트 Secret"
        },
        "scopes": {
          "type": "array",
          "description": "API 사용 권한 범위",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "clientSecret",
        "scopes"
      ],
      "x-stoplight": {
        "id": "authclient",
        "name": "authClient",
        "public": true
      }
    },
    "pushdevices": {
      "title": "PushDevices",
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "g",
            "a"
          ],
          "description": "구글 : \"g\", 애플: \"a\""
        },
        "activated": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "\"y\"인 장비에만 푸쉬해줌."
        },
        "authClientId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Access Token을 부여받기 위해 등록한 AuthClientId"
        }
      },
      "x-stoplight": {
        "id": "pushdevices",
        "name": "PushDevices",
        "public": true
      }
    },
    "sensortype-output": {
      "title": "SensorType Output",
      "type": "object",
      "properties": {
        "decimalPlace": {
          "type": "string",
          "description": "센서값의 value의 유효 소숫점 자리 값"
        },
        "stats": {
          "type": "object",
          "description": "통계 관련정보",
          "properties": {
            "funcs": {
              "type": "array",
              "description": "센서의 대표  통계 함수",
              "items": {
                "type": "string"
              }
            },
            "frequency": {
              "type": "string",
              "default": "n",
              "enum": [
                "y",
                "n"
              ],
              "description": "\"y\" 인 센서에 대해서만 서버에서 통계 계산을 별도로 함."
            },
            "cumulative": {
              "type": "string",
              "default": "n",
              "enum": [
                "y",
                "n"
              ],
              "description": "서버에서 센서값의 누적처리를 별도로 해줄지 여부."
            }
          }
        },
        "id": {
          "type": "string",
          "description": "센서 타입 이름\n예: \"door\", \"onoff\", \"motion\" 등"
        },
        "unit": {
          "type": "string",
          "description": "센서값의 단위"
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "category": {
          "type": "string",
          "enum": [
            "sensor",
            "actuator"
          ],
          "description": "센서 카테고리"
        },
        "chart": {
          "type": "object",
          "description": "차트 관련정보",
          "properties": {
            "drawable": {
              "type": "boolean",
              "description": "차트로 그릴 수 있는지 여부\n예) 온도센서는 true, GPS 는 false"
            },
            "dataType": {
              "type": "string",
              "description": "\"series\" or \"event\""
            },
            "cumulative": {
              "type": "boolean",
              "description": "점점 누적되어 늘어나는 값 여부(전력량은 true)"
            },
            "intervalFunc": {
              "type": "string",
              "description": "series 데이터는 default로 average함수를 쓰나, 여기서 지정한 함수를 씀.(컬러등은 평균이 의미가 없으므로 주로 last함수를 씀)"
            }
          }
        },
        "ctime": {
          "type": "string",
          "description": "생성시각"
        },
        "type": {
          "type": "string",
          "description": "센서 값의 타입종류",
          "enum": [
            "number",
            "object",
            "string",
            "boolean"
          ]
        },
        "contentType": {
          "type": "object",
          "description": "actuator의 Actuaction 결과 포멧"
        },
        "commands": {
          "type": "object",
          "description": "actuator의 command 포멧"
        },
        "minimum": {
          "type": "string",
          "description": "deprecated! sensor범위 minimum. Range.min 참조 "
        },
        "maximum": {
          "type": "string",
          "description": "deprecated! sensor범위 maximum. Range.max 참조 "
        },
        "range": {
          "type": "object",
          "properties": {
            "min": {
              "type": "integer",
              "description": "sensor범위 min 값"
            },
            "max": {
              "type": "integer",
              "description": "sensor범위 max 값"
            },
            "interval": {
              "type": "integer",
              "description": "min에서 max까지 증가할 값의 간격"
            }
          }
        },
        "values": {
          "type": "array",
          "description": "sensor가 올려주는 값. displayValue와 한쌍",
          "items": {
            "type": [
              "number",
              "string"
            ]
          }
        },
        "displayValues": {
          "type": "array",
          "description": "sensor가 올려주는 값의 표현. values에 해당하는 표현 값",
          "items": {
            "type": "string"
          }
        },
        "displayImage": {
          "type": "string",
          "description": "internal use only"
        }
      },
      "example": {
        "decimalPlace": "2",
        "stats": {
          "funcs": [
            "avg"
          ],
          "frequency": "y",
          "cumulative": "y"
        },
        "id": "strain",
        "unit": "um/m",
        "mtime": "1489645343084",
        "category": "sensor",
        "chart": {
          "drawable": true,
          "dataType": "series",
          "cumulative": true,
          "intervalFunc": "last",
          "yaxis": {
            "min": 0,
            "max": 3
          }
        },
        "ctime": "1489645343084",
        "type": "number",
        "contentType": {
          "properties": {},
          "display": [],
          "type": "object",
          "link": []
        },
        "commands": {},
        "minimum": "0",
        "maximum": "10",
        "range": {
          "min": -100,
          "max": 10,
          "interval": 1
        },
        "values": [
          1
        ],
        "displayValues": [
          "in"
        ],
        "displayImage": "y"
      },
      "x-stoplight": {
        "id": "sensortype-output",
        "name": "SensorType Output",
        "public": true
      }
    },
    "rule-input": {
      "title": "Rule Input",
      "type": "object",
      "properties": {
        "actions": {
          "maxItems": 5,
          "minItems": 1,
          "type": "array",
          "description": "룰 동작시 실행되는 액션 배열",
          "items": {
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "description": "룰 동작시 실행되는 액션 배열",
            "items": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "agent": {
                  "type": "string",
                  "description": "action의 Agent종류"
                },
                "method": {
                  "additionalProperties": true,
                  "type": "object",
                  "required": [
                    "id",
                    "params"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "action의 Method 종류"
                    },
                    "name": {
                      "type": "string",
                      "description": "Method의 이름 i18n 적용됨"
                    },
                    "params": {
                      "type": [
                        "string",
                        "object"
                      ],
                      "description": "method 에서 사용할 값"
                    }
                  }
                },
                "type": {
                  "type": "string",
                  "description": "Agent가 지원하는 Type 중 선택한 값 "
                }
              },
              "required": [
                "agent",
                "method",
                "type"
              ]
            }
          }
        },
        "conditions": {
          "maxItems": 5,
          "minItems": 0,
          "type": "array",
          "description": "룰 실행시 통과해야할 추가요소. 컨디션이 통과되어야만 액션이 동작한다 ",
          "items": {
            "maxItems": 5,
            "minItems": 0,
            "type": "array",
            "description": "룰 실행시 통과해야할 추가요소. 컨디션이 통과되어야만 액션이 동작한다 ",
            "items": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "agent": {
                  "type": "string",
                  "description": "condition의 Agent종류"
                },
                "method": {
                  "additionalProperties": true,
                  "type": "object",
                  "required": [
                    "id",
                    "params"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "condition의 Method ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Method의 이름 i18n 적용됨"
                    },
                    "params": {
                      "type": [
                        "string",
                        "object"
                      ],
                      "description": "method 에서 사용할 값"
                    }
                  }
                },
                "type": {
                  "type": "string",
                  "description": "Agent가 지원하는 Type 중 선택한 값 "
                }
              },
              "required": [
                "agent",
                "method",
                "type"
              ]
            }
          }
        },
        "desc": {
          "type": "string",
          "description": "해당 룰에 대한 추가 설명. "
        },
        "name": {
          "type": "string",
          "description": "리스트에서 확인가능한 룰의 이름 ",
          "minLength": 1,
          "maxLength": 100
        },
        "severity": {
          "enum": [
            "fatal",
            "information",
            "warning"
          ],
          "type": "string",
          "description": "룰의 심각도 "
        },
        "status": {
          "enum": [
            "activated",
            "deactivated"
          ],
          "type": "string",
          "description": "룰의 활성화 상태"
        },
        "template": {
          "enum": [
            "false",
            "true"
          ],
          "default": false,
          "type": "string",
          "description": "template 룰만 true. 사용자는 입력 없음"
        },
        "timezone": {
          "type": "string",
          "description": "룰이 동작할 local Timezone. 소숫점 아래는 10진수로 입력됨 +09.50 = +9:30 분"
        },
        "trigger": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "agent": {
              "type": "string",
              "description": "trigger의 Agent종류"
            },
            "filter": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "gateway": {
                  "type": [
                    "array",
                    "string"
                  ],
                  "description": "필터링 할 게이트웨이 id 배열.\n(\"*\" 면 모든 게이트웨이 통과)",
                  "items": {
                    "type": "string"
                  }
                },
                "sensor": {
                  "type": [
                    "array",
                    "string"
                  ],
                  "description": "필터링 할 센서 id 배열.",
                  "items": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/definitions/sensor-output"
                    }
                  ]
                },
                "op": {
                  "type": [
                    "string",
                    "array"
                  ]
                },
                "type": {
                  "type": "array",
                  "description": "센서 데이터 값을 필터링 위한 센서 종류 기준(\"schedule\", \"series\", \"statSchedule\", \"status\" )",
                  "items": {
                    "enum": [
                      "schedule",
                      "series",
                      "statSchedule",
                      "status"
                    ],
                    "type": "string"
                  }
                }
              }
            },
            "method": {
              "type": "object",
              "required": [
                "id",
                "params"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "trigger method ID"
                },
                "name": {
                  "type": "string",
                  "description": "Method의 이름 i18n 적용됨"
                },
                "params": {
                  "type": [
                    "string",
                    "object"
                  ],
                  "description": "method 에서 사용할 값"
                }
              }
            },
            "type": {
              "type": "string",
              "description": "Agent가 지원하는 Type 중 선택한 값 "
            }
          },
          "required": [
            "agent",
            "filter",
            "method",
            "type"
          ]
        }
      },
      "example": {
        "severity": "warning",
        "_service": "0",
        "ctime": "1490769625019",
        "timezone": "+9.00",
        "_user": "0",
        "mtime": "1490769625019",
        "_site": "0",
        "status": "activated",
        "actions": [
          [
            {
              "agent": "email",
              "type": "email",
              "method": {
                "name": "send",
                "id": "send",
                "params": {
                  "to": "chris.lee+testqc+admin@daliworks.net",
                  "subject": "Temperature over 30",
                  "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                }
              }
            }
          ]
        ],
        "name": "sample rule",
        "trigger": {
          "agent": "sensorValue",
          "type": "temperature",
          "method": {
            "name": "Over",
            "id": "over",
            "params": {
              "degree": 30,
              "target": {
                "type": "gateway",
                "id": "3b3932ac963b4e81948445ae8c20fb16",
                "sensors": [
                  "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                ]
              }
            }
          },
          "filter": {
            "type": [
              "series"
            ],
            "gateway": "*",
            "sensor": [
              "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
            ]
          }
        }
      },
      "x-stoplight": {
        "id": "rule-input",
        "name": "Rule Input",
        "public": true
      }
    },
    "gateway-output": {
      "title": "Gateway Output",
      "allOf": [
        {
          "title": "gateway",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "minLength": 1,
              "description": "게이트웨이 Status id"
            },
            "devices": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/gateway-common"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "sensors": [
          "b827ebda7b2a-0-string",
          "b827ebda7b2a-0-temp",
          "b827ebda7b2a-0-humi",
          "b827ebda7b2a-0-light",
          "b827ebda7b2a-0-sound",
          "b827ebda7b2a-0-relay",
          "b827ebda7b2a-0-buzz",
          "b827ebda7b2a-0-led",
          "b827ebda7b2a-0-button",
          "b827ebda7b2a-0-ultra",
          "b827ebda7b2a-0-rotary",
          "b827ebda7b2a-0-lcd"
        ],
        "deviceModels": [
          {
            "model": "GrovePiPlusStarterKitForRaspberryPi"
          }
        ],
        "name": "heesberryGW",
        "ctime": "1491370577929",
        "status": "status.gateway.qMdXIb",
        "tree": "b827ebda7b2a",
        "mtime": "1491370613748",
        "_service": "0",
        "autoCreateDiscoverable": "y",
        "_site": "0",
        "reportInterval": "300000",
        "devices": [
          "b827ebda7b2a-0"
        ],
        "model": "18",
        "id": "b827ebda7b2a"
      },
      "x-stoplight": {
        "id": "gateway-output",
        "name": "Gateway Output",
        "public": true
      }
    },
    "gatewaymodel-output": {
      "title": "GatewayModel Output",
      "type": "object",
      "properties": {
        "deviceMgmt": {
          "type": "object",
          "description": "디바이스 관리 정보를 담은 객체\n",
          "properties": {
            "reportInterval": {
              "type": "object",
              "description": "Thing+ 포털에서 표시(show) 및 변경(change) 할수 있는지 여부에 대한 정보.",
              "properties": {
                "show": {
                  "type": "string",
                  "enum": [
                    "y",
                    "n"
                  ]
                },
                "change": {
                  "type": "string",
                  "enum": [
                    "y",
                    "n"
                  ]
                }
              }
            },
            "DM": {
              "type": "object",
              "description": "정의된 명령을 게이트웨이에 전송할 수 있는 지 여부를 담은 객체.",
              "properties": {
                "poweroff": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "reboot": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "restart": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "swUpdate": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "swInfo": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "log": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                },
                "getProperty": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    },
                    "allow": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "delete": {
                  "type": "object",
                  "properties": {
                    "support": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "enabled": {
              "type": "string"
            },
            "": {
              "type": "string"
            }
          }
        },
        "ctime": {
          "type": "string",
          "description": "생성일"
        },
        "vendor": {
          "type": "string",
          "description": "vendor 명"
        },
        "reportInterval": {
          "type": "string",
          "description": "전송주기"
        },
        "deviceModels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "디바이스 모델 id"
              },
              "displayName": {
                "type": "string",
                "description": "디바이스 표시명 (게이트웨이 등록시 표시되는 이름)"
              },
              "idTemplate": {
                "type": "string",
                "description": "디바이스 id 생성 포멧"
              },
              "discoverable": {
                "type": "string",
                "description": "검색 되는지 여부"
              },
              "addressable": {
                "type": "string",
                "description": "사용자가 주소를 지정할 수 있는지 여부"
              },
              "sensors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "network": {
                      "type": "string",
                      "description": "디바이스와 게이트웨이 간의 통신 프로토콜"
                    },
                    "driverName": {
                      "type": "string",
                      "description": "센서 드라이버 명."
                    },
                    "model": {
                      "type": "string",
                      "description": "센서 모델 id"
                    },
                    "sequence": {
                      "type": "string",
                      "description": "센서 중복되지 않게 하는 일련번호."
                    },
                    "type": {
                      "type": "string",
                      "description": "센서 타입"
                    },
                    "category": {
                      "type": "string",
                      "description": "sensor, actuator 구분.",
                      "enum": [
                        "sensor",
                        "actuator"
                      ]
                    },
                    "address": {
                      "type": "string",
                      "description": "센서가 연결된 디바이스 주소"
                    }
                  }
                }
              },
              "max": {
                "type": "integer",
                "description": "게이트웨이에 등록할 수 있는 최대 디바이스 수"
              },
              "delegateInfo": {
                "type": "object",
                "description": "오리지널 디바이스에 대한 정보를 담은 객체.",
                "properties": {
                  "sensor": {
                    "type": "object",
                    "properties": {
                      "realId": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "source": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "model": {
          "type": "string",
          "description": "게이트웨이 모델 id"
        },
        "idFormat": {
          "type": "string",
          "description": "게이트웨이 모델 id 포멧"
        },
        "displayName": {
          "type": "string",
          "description": "게이트웨이 모델 표시명."
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "id": {
          "type": "string",
          "description": "게이트웨이 모델 id"
        },
        "delegateInfo": {
          "type": "object",
          "description": "delegate 정보 object",
          "properties": {
            "model": {
              "type": "string",
              "description": "delegate 디바이스의 대분류 모델명 \n(예: lora, wisepaas)"
            },
            "branchId": {
              "type": "string",
              "description": "delegate 디바이스 구체 id\n예: advantech, actility"
            },
            "idFormat": {
              "type": "string",
              "description": "delegate 된 리얼 디바이스의 id 포멧."
            },
            "realId": {
              "type": "object",
              "description": "delegate 된 리얼 디바이스의 id  정보 또는 Thing+ id를 승계받을 지에 대한 정보.",
              "properties": {
                "type": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                }
              }
            },
            "management": {
              "type": "object",
              "description": "관리정보를 담은 객체.",
              "properties": {
                "get": {
                  "type": "object",
                  "properties": {
                    "target": {
                      "type": "string"
                    }
                  }
                },
                "sync": {
                  "type": "object",
                  "properties": {
                    "target": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "extra": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "required": {
                    "type": "string"
                  }
                }
              }
            },
            "parser": {
              "type": "object",
              "description": "delegate 디바이스에서 보내오는 독자적인 데이터 포멧을 파싱하기 위한 정보.",
              "properties": {
                "vendor": {
                  "type": "string"
                },
                "model": {
                  "type": "string"
                },
                "sensors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "sequence": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "gatewayIdConfig": {
          "type": "string",
          "description": "사용자가 게이트웨이 id를 지정할 수 있는지 여부\n(virtual 은 지정불가)",
          "enum": [
            "y",
            "n"
          ]
        },
        "delegate": {
          "type": "string",
          "description": "delegate 여부",
          "enum": [
            "y",
            "n"
          ]
        },
        "authTypes": {
          "type": "array",
          "description": "인증 종류",
          "items": {
            "type": "string",
            "enum": [
              "apikey",
              "apikeyReady",
              "cert"
            ]
          }
        },
        "apikey": {
          "type": "object",
          "description": "apikey에 관한 정보 객체.",
          "properties": {
            "expire": {
              "type": "string",
              "description": "apikey의 expire 여부",
              "enum": [
                "y",
                "n"
              ]
            },
            "duration": {
              "type": "string",
              "description": "apikey 유효기간"
            },
            "insecure": {
              "type": "string",
              "description": "apikey를 secure하지 않은 네트웍에서 사용할 수 있는지 여부.",
              "enum": [
                "y",
                "n"
              ]
            }
          }
        },
        "virtual": {
          "type": "string",
          "description": "가상 게이트웨이 여부",
          "enum": [
            "y",
            "n"
          ]
        },
        "autoGenerateId": {
          "type": "string",
          "description": "자동생성 id 여부",
          "enum": [
            "y",
            "n"
          ]
        },
        "vendorId": {
          "type": "string",
          "description": "vendor id"
        },
        "customFields": {
          "type": "object",
          "description": "특정 게이트웨이의 추가 정보를 담는 객체",
          "properties": {
            "type": {
              "type": "string"
            },
            "properties": {
              "type": "object"
            }
          }
        },
        "deprecated": {
          "type": "string",
          "description": "사용중지"
        }
      },
      "example": {
        "idFormat": "custom",
        "deviceModels": [
          {
            "id": "trueyesNFCAirQ",
            "displayName": "Trueyes NFC Air-Q",
            "idTemplate": "{gatewayId}",
            "discoverable": "n",
            "sensors": [
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericTemp",
                "sequence": "1",
                "type": "temperature",
                "category": "sensor"
              },
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericHumi",
                "sequence": "1",
                "type": "humidity",
                "category": "sensor"
              },
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericCo",
                "sequence": "1",
                "type": "co",
                "category": "sensor"
              },
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericCo2",
                "sequence": "1",
                "type": "co2",
                "category": "sensor"
              },
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericDust",
                "sequence": "1",
                "type": "dust",
                "category": "sensor"
              },
              {
                "network": "daliworks",
                "driverName": "genericSensor",
                "model": "genericNumber",
                "sequence": "1",
                "type": "number",
                "category": "sensor"
              }
            ],
            "max": 1
          }
        ],
        "vendor": "TRUEYES",
        "id": "20",
        "authTypes": [
          "apikeyReady"
        ],
        "mtime": "1484640369907",
        "displayName": "Trueyes NFC Air-Q",
        "model": "trueyesNFC",
        "deviceMgmt": {
          "reportInterval": {
            "show": "y"
          }
        },
        "ctime": "1484640369907"
      },
      "x-stoplight": {
        "id": "gatewaymodel-output",
        "name": "GatewayModel Output",
        "public": true
      }
    },
    "device-input": {
      "title": "Device Input",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "사용자가 지정한 디바이스의 이름"
        },
        "model": {
          "type": "string",
          "description": "해당 디바이스의 고유 Id"
        },
        "address": {
          "type": "string",
          "description": "디바이스 주소"
        }
      },
      "example": {
        "name": "Simul Device 3",
        "model": "sensorSimulator",
        "address": "0"
      },
      "x-stoplight": {
        "id": "device-input",
        "name": "Device Input",
        "public": true
      }
    },
    "registergateway-output": {
      "title": "RegisterGateway Output",
      "allOf": [
        {
          "title": "gateway",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "devices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device-output"
              }
            },
            "sensors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/sensor-output"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/gateway-common"
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "name": "VirtualGatewayBasic2",
        "model": "6",
        "deviceModels": [
          {
            "id": "4545397575a844f8ae85ef5ff1a072d3",
            "model": "statistics"
          }
        ],
        "_site": "0",
        "_service": "0",
        "virtual": "y",
        "reportInterval": 3600000,
        "mtime": 1491294937009,
        "ctime": 1491294937009,
        "tree": "999509a758d1471daea081d866f294ef",
        "id": "999509a758d1471daea081d866f294ef",
        "devices": [
          {
            "name": "StatisticsDevice",
            "model": "statistics",
            "owner": "999509a758d1471daea081d866f294ef",
            "mtime": 1491294937014,
            "ctime": 1491294937014,
            "id": "4545397575a844f8ae85ef5ff1a072d3"
          }
        ],
        "sensors": [
          {
            "network": "daliworks",
            "driverName": "daliworksInternal",
            "model": "gatewaysCounter",
            "type": "count",
            "category": "sensor",
            "name": "count_1",
            "deviceId": "4545397575a844f8ae85ef5ff1a072d3",
            "virtual": "y",
            "owner": "999509a758d1471daea081d866f294ef",
            "mtime": 1491294937024,
            "ctime": 1491294937024,
            "id": "gatewaysCounter-999509a758d1471daea081d866f294ef"
          },
          {
            "network": "daliworks",
            "driverName": "daliworksInternal",
            "model": "sensorsCounter",
            "type": "count",
            "category": "sensor",
            "name": "count_2",
            "deviceId": "4545397575a844f8ae85ef5ff1a072d3",
            "virtual": "y",
            "owner": "999509a758d1471daea081d866f294ef",
            "mtime": 1491294937036,
            "ctime": 1491294937036,
            "id": "sensorsCounter-999509a758d1471daea081d866f294ef"
          }
        ]
      },
      "x-stoplight": {
        "id": "registergateway-output",
        "name": "RegisterGateway Output",
        "public": true
      }
    },
    "common-response": {
      "title": "Common Response",
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "description": "상태코드 (http 상태코드)"
        },
        "message": {
          "type": "string",
          "description": "API 호출 결과 메시지"
        }
      },
      "required": [
        "statusCode",
        "message"
      ],
      "x-stoplight": {
        "id": "common-response",
        "name": "Common Response",
        "public": true
      }
    },
    "user-output": {
      "title": "User Output",
      "allOf": [
        {
          "properties": {
            "loginId": {
              "type": "string",
              "description": "사용자 로그인 id"
            },
            "email": {
              "type": "string",
              "description": "메일주소"
            },
            "locale": {
              "type": "string",
              "description": "사용자 로케일"
            },
            "timezone": {
              "type": "string",
              "description": "사용자 타임존"
            },
            "country": {
              "type": "string",
              "description": "사용자 국가"
            },
            "accessApproval": {
              "type": "string",
              "enum": [
                "allow",
                "deny"
              ],
              "description": "승인여부."
            },
            "_service": {
              "type": "string",
              "description": "서비스 id"
            },
            "_site": {
              "type": "string",
              "description": "사이트 id"
            },
            "roles": {
              "type": "array",
              "description": "사용자 권한 역할 (중복 가능)\n예) \"systemAdmin\", \"siteAdmin\", \"serviceAdmin\",\n\"user:1\"",
              "items": {
                "type": "string"
              }
            },
            "billing": {
              "type": "string",
              "description": "billing id"
            },
            "billingLimit": {
              "type": "string",
              "description": "billing limit id ( 하드 리밋으로 더 이상 늘릴 수 없음)"
            },
            "billingCurrent": {
              "type": "string",
              "description": "current billing id (현재 까지의 빌링 정보)"
            },
            "billingMeter": {
              "type": "string",
              "description": "billing meter id (이번 달의 빌링정보 id)"
            },
            "verifiedEmail": {
              "type": "string",
              "description": "인증된 이메일"
            },
            "id": {
              "type": "string",
              "description": "사용자 id (일련번호)"
            }
          }
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "type": "object",
      "example": {
        "loginId": "safeadmin",
        "email": "rs@daliworks.net",
        "locale": "ko",
        "timezone": "+9.00",
        "country": "kr",
        "accessApproval": "allow",
        "_service": "1",
        "_site": "1",
        "roles": [
          "serviceAdmin",
          "user:1"
        ],
        "mtime": "1483420098948",
        "ctime": "1483420068637",
        "billing": "user:1",
        "billingLimit": "user:1:limit",
        "billingCurrent": "user:1:current",
        "billingMeter": "user:1:meter",
        "verifiedEmail": "rs@daliworks.net",
        "id": "1"
      },
      "x-stoplight": {
        "id": "user-output",
        "name": "User Output",
        "public": true
      }
    },
    "common-output": {
      "title": "Common Output",
      "type": "object",
      "properties": {
        "ctime": {
          "type": [
            "number",
            "string"
          ],
          "maxLength": 15,
          "description": "생성시각 (DB기준)"
        },
        "mtime": {
          "type": [
            "number",
            "string"
          ],
          "maxLength": 15,
          "description": "수정시각 (DB기준)"
        }
      },
      "x-stoplight": {
        "id": "common-output",
        "name": "Common Output",
        "public": true
      }
    },
    "device-output": {
      "title": "Device Output",
      "allOf": [
        {
          "$ref": "#/definitions/device-input"
        },
        {
          "type": "object",
          "properties": {
            "owner": {
              "type": "string",
              "description": "해당 디바이스를 소유한 게이트웨이 ID"
            },
            "id": {
              "type": "string",
              "description": "디바이스를 고유한 ID"
            }
          }
        },
        {
          "$ref": "#/definitions/common-output"
        }
      ],
      "example": {
        "name": "ESP8266",
        "model": "groveArduinoKit1.0",
        "owner": "5ccf7f1dfac1",
        "mtime": "1480667758276",
        "ctime": "1480667758275",
        "id": "5ccf7f1dfac1-gsk10",
        "address": "0"
      },
      "x-stoplight": {
        "id": "device-output",
        "name": "Device Output",
        "public": true
      }
    },
    "sensor": {
      "title": "Sensor",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "센서 타입"
        },
        "network": {
          "type": "string",
          "description": "센서가 사용하는 네트워크(센서와 장비가 통신하기 프로토콜)\n예: jsonrpc, w1, bluetooth, BLE"
        },
        "driverName": {
          "type": "string",
          "description": "제조사의 드라이버 명(현재는 드라이버 id와 같음)"
        },
        "category": {
          "type": "string",
          "enum": [
            "sensor",
            "actuator"
          ],
          "description": "센서 카테고리(\"sensor\"/\"actuator\")"
        },
        "model": {
          "type": "string",
          "description": "센서 드라이버에서 지원하는 모델 id"
        },
        "sequence": {
          "type": "string",
          "description": "해당 타입 센서의 넘버링. 넘버링의 시작은 1"
        },
        "owner": {
          "type": "string",
          "description": "센서를 소유한 게이트웨이 ID"
        },
        "name": {
          "type": "string",
          "description": "사용자가 임의로 설정한 센서 이름"
        },
        "deviceId": {
          "type": "string",
          "description": "센서가 속한 디바이스 ID"
        },
        "address": {
          "type": "string",
          "description": "sensor.js 프로토콜에서 사용하는 address"
        },
        "virtual": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "가상 센서라면 y"
        },
        "delegate": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "delegate 센서라면 y"
        },
        "delegateInfo": {
          "type": "object",
          "description": "delegate 관련 정보 묶음"
        },
        "options": {
          "type": "object",
          "description": "이벤트가 발생했을 때, 게이트웨이에게 알려줄지 여부.",
          "properties": {
            "notification": {
              "type": "string"
            }
          }
        }
      },
      "example": {
        "network": "daliworks",
        "driverName": "daliworksEmulator",
        "model": "humidityEmulator",
        "sequence": "1",
        "type": "humidity",
        "category": "sensor",
        "name": "humidity_1",
        "deviceId": "27b61309b5c643358e4b43fff1cb62fa",
        "virtual": "y",
        "owner": "8683bbca9bf249078c81687fac9b778f"
      },
      "x-stoplight": {
        "id": "sensor",
        "name": "Sensor",
        "public": true
      }
    },
    "sensordriver-output": {
      "title": "SensorDriver Output",
      "type": "object",
      "properties": {
        "commands": {
          "type": "object",
          "description": "여기에 지정된 센서 모델에서 정의된 커맨드를 actuator에 명령할 수 있음. (배열은 파라메터)"
        },
        "discoverable": {
          "type": "string",
          "description": "검색될수 있는지 여부."
        },
        "id": {
          "type": "string",
          "description": "센서 드라이버 id"
        },
        "contentType": {
          "type": "object",
          "description": "commands의 명령에 대한 응답 데이터 포멧.\n(또는 에러 포멧)"
        },
        "dataTypes": {
          "type": [
            "object",
            "array"
          ],
          "description": "각 센서 모델별 값의 unit",
          "properties": {
            "": {
              "type": [
                "string",
                "object"
              ]
            }
          }
        },
        "displayName": {
          "type": "string",
          "description": "센서 표시 명."
        },
        "models": {
          "type": "array",
          "description": "센서 모델의 id의 배열.",
          "items": {
            "type": "string"
          }
        },
        "supportedNetworks": {
          "type": "array",
          "description": "지원하는 네트웍 종류들",
          "items": {
            "type": "string"
          }
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "category": {
          "type": "string",
          "description": "sensor/activator 구분"
        },
        "addressable": {
          "type": "string",
          "description": "사용자가 디바이스의 주소를 지정할 수 있는지 여부."
        },
        "driverName": {
          "type": "string",
          "description": "id와 같음."
        },
        "ctime": {
          "type": "string",
          "description": "생성시각"
        },
        "idTemplate": {
          "type": "string",
          "description": "센서의 id를 만들기 위한 포멧 템플릿."
        },
        "unit": {
          "type": "object",
          "description": "센서에서 지정한 unit이 아닌 unit을 사용할 때, 지정함"
        },
        "decimalPlace": {
          "type": "object",
          "description": "모델별 정밀도 정보(sensorType보다 우선순위가 높다)"
        },
        "onChange": {
          "type": "object",
          "description": "여기에 true로 선언된 센서만 값이 바뀌었을 때, 바로 이벤트로 보낼 수 있음."
        },
        "sequenceable": {
          "type": "string",
          "description": "사용자가 시퀀스정보를 지정할 수 있는지 여부."
        },
        "upload": {
          "type": "object",
          "description": "이 객체에 정의된 명령에 대해서는 파일을 업로드하게 됨."
        }
      },
      "example": {
        "commands": {
          "advanwiseLed": {
            "on": [],
            "off": []
          },
          "ezexPowerController": {
            "powerOn": [],
            "powerOff": [],
            "autoCutoffOn": [],
            "autoCutoffOff": [],
            "remoteLockOn": [],
            "remoteLockOff": [],
            "set": [
              {
                "name": "cutoffvalue",
                "type": "number",
                "required": true,
                "min": 0,
                "max": 3000,
                "unit": "w"
              }
            ],
            "get": []
          },
          "ezexswitch": {
            "on": [],
            "off": []
          },
          "ezexlockunlock": {
            "lock": [],
            "unlock": []
          },
          "ezextimer": {
            "set": [
              {
                "name": "duration",
                "type": "number",
                "required": true,
                "min": 0,
                "max": 3000,
                "unit": "sec"
              }
            ],
            "get": []
          },
          "genericCamera": {
            "snapPicture": [
              null
            ]
          },
          "FI9821WA": {
            "snapPicture": [],
            "gotoPresetDefault": [],
            "resetPosition": [],
            "reboot": []
          }
        },
        "discoverable": "false",
        "id": "advanwiseActuator",
        "contentType": {
          "advanwiseLed": {
            "properties": {
              "cmd": {
                "type": "string"
              },
              "result": {
                "type": "string",
                "enum": [
                  "success",
                  "error"
                ]
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "display": [
              "cmd"
            ]
          },
          "ezexPowerController": {
            "properties": {
              "cmd": {
                "type": "string"
              },
              "result": {
                "type": "object",
                "properties": {
                  "cutoffValue": {
                    "type": "number",
                    "unit": "W",
                    "minimum": 0
                  },
                  "powerStatus": {
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  },
                  "autoCutoffStatus": {
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  },
                  "remoteLockStatus": {
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "display": [
              "cmd"
            ]
          },
          "ezexSwitch": {
            "properties": {
              "cmd": {
                "type": "string"
              },
              "result": {
                "type": "string",
                "enum": [
                  "success",
                  "error"
                ]
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "display": [
              "cmd"
            ]
          },
          "ezexLockUnlock": {
            "properties": {
              "cmd": {
                "type": "string"
              },
              "result": {
                "type": "string",
                "enum": [
                  "success",
                  "error"
                ]
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "display": [
              "cmd"
            ]
          },
          "ezexTimer": {
            "properties": {
              "cmd": {
                "type": "string"
              },
              "result": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "number",
                    "unit": "sec",
                    "minimum": 0
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "number"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            },
            "display": [
              "cmd"
            ]
          }
        },
        "dataTypes": {},
        "displayName": "Advanwise Actuator",
        "models": [
          "advanwiseLed"
        ],
        "supportedNetworks": [
          "daliworks"
        ],
        "mtime": "1489645347197",
        "category": "actuator",
        "addressable": "true",
        "driverName": "advanwiseActuator",
        "ctime": "1489645347197",
        "idTemplate": "{gatewayId}-{deviceAddress}-{type}",
        "unit": {
          "advanwiseVoc": "ppb",
          "ezexElecticEnergy": "Wh",
          "genericDistance": "cm",
          "libeliumCo": "V",
          "libeliumCo2": "V",
          "libeliumNo2": "V",
          "libeliumO3": "V",
          "libeliumPressure": "Pa",
          "libeliumAtmosphericPressure": "kPa",
          "libeliumNoise": "dbA",
          "libeliumLight": "Ω",
          "libeliumLigthLux": "lux",
          "libeliumNumberPPM": "ppm",
          "libeliumCh4Pro": "%",
          "libeliumTempFahr": "°F",
          "libeliumRainMmh": "mm/h",
          "libeliumPHPro": "",
          "jsonrpcVoltageEvent": "Volt"
        },
        "networkDrivers": {
          "jsonrpc": "jsonrpcActuator"
        },
        "decimalPlace": {
          "ezexCurrent": 2,
          "ezexVoltage": 2,
          "ezexElectricPowerEvent": 0,
          "libeliumCo": 3,
          "libeliumCo2": 3,
          "libeliumNo2": 3,
          "libeliumO3": 3,
          "libeliumPressure": 0,
          "libeliumAtmosphericPressure": 2,
          "libeliumNoise": 0,
          "libeliumDistance": 2,
          "libeliumLight": 3,
          "libeliumTemp": 2,
          "libeliumHumi": 1,
          "libeliumLigthLux": 2,
          "libeliumNumberPPM": 3,
          "libeliumCoPro": 3,
          "libeliumCo2Pro": 3,
          "libeliumCh4Pro": 3,
          "libeliumTempCelsPro": 3,
          "libeliumTempFahr": 2,
          "libeliumHumiPro": 2,
          "libeliumDust": 4,
          "libeliumPHPro": 3,
          "jsonrpcVoltageEvent": 2
        },
        "recommendedInterval": "60000",
        "onChange": {
          "ezexOnoff": true,
          "ezexMotion": true,
          "ezexDoor": true,
          "ezexCountEvent": true,
          "ezexTag": true,
          "ezexReader": true,
          "ezexElectricPowerEvent": true,
          "jsonrpcDi": true,
          "jsonrpcMotion": true,
          "jsonrpcDoor": true,
          "jsonrpcCountEvent": true,
          "jsonrpcTag": true,
          "jsonrpcReader": true,
          "jsonrpcLight": false,
          "jsonrpcVoltageEvent": true
        },
        "descriptions": {
          "models": {
            "visudreamSum": "cumulative power consumption",
            "visudreamV": "Voltage",
            "visudreamI": "Current",
            "visudreamPf": "Power factor",
            "visudreamFreq": "Frequency",
            "HTU21D": "I2C Humidity Sensor by MEAS",
            "TSL2561": "I2C Light Sensor by TAOS Inc.",
            "BH1750": "I2C Light Sensor byROHM Co.",
            "sensorTagHum": "TI Sensor Tag, Humidity only",
            "sensorTagWobble": "TI Sensor Tag; wobble: 'on', no wobble: 'off'",
            "passiveInfrared": "motion: 'on', no motion: 'off'",
            "normallyOpen": "open: 'off', close: 'on'",
            "normallyClose": "open: 'on', close: 'off'",
            "dht11": "Humidity sensor",
            "dht22": "Humidity sensor(higher accurate)"
          },
          "supportedNetworks": {
            "serial": "{serial type}{port}  USB0 for /dev/ttyUSB0, O1 for /dev/ttyO1",
            "visudream": "{ip_address}:{port} e.g. 192.168.0.11:5001",
            "libelium": "{device address} Waspmote address found at id_wasp field in DB",
            "foscam": "{ip_address}:{port} e.g. 192.168.0.11:88",
            "i2c": "0x{hexa number} e.g. 0x40",
            "uart": "{port number} e.g. 1",
            "gpio": "{gpio number} e.g. 67"
          },
          "sequence": "{sequence number} e.g. 0, starts with zero, grows if more then one sensors for the same model"
        },
        "sequenceable": "true",
        "upload": {
          "FI9821WA": [
            "snapPicture"
          ]
        }
      },
      "x-stoplight": {
        "id": "sensordriver-output",
        "name": "SensorDriver Output",
        "public": true
      }
    },
    "rule-output": {
      "title": "Rule Output",
      "allOf": [
        {
          "properties": {
            "_service": {
              "maxLength": 100,
              "minLength": 1,
              "type": "string",
              "description": "Rule이 소속된 service의 Id"
            },
            "_site": {
              "maxLength": 100,
              "minLength": 1,
              "type": "string",
              "description": "Rule이 소속된 Site Id"
            },
            "_user": {
              "maxLength": 100,
              "minLength": 1,
              "type": "string",
              "description": "Rule을 생성한 user의 Id"
            },
            "id": {
              "type": "string",
              "description": "Rule id"
            }
          }
        },
        {
          "$ref": "#/definitions/common-output"
        },
        {
          "$ref": "#/definitions/rule-input"
        }
      ],
      "type": "object",
      "example": {
        "_user": "0",
        "conditions": [
          []
        ],
        "timezone": "+9.00",
        "severity": "warning",
        "_site": "0",
        "actions": [
          [
            {
              "agent": "email",
              "type": "email",
              "method": {
                "name": "send",
                "id": "send",
                "params": {
                  "to": "chris.lee+testqc+admin@daliworks.net",
                  "subject": "Temperature over 30",
                  "body": "{{value}} {{triggerSensor}}@{{triggerGateway}} ({{triggerCondition}})"
                }
              }
            }
          ]
        ],
        "_service": "0",
        "mtime": "1490769625019",
        "status": "activated",
        "name": "sample rule",
        "trigger": {
          "agent": "sensorValue",
          "type": "temperature",
          "method": {
            "name": "Over",
            "id": "over",
            "params": {
              "degree": 30,
              "target": {
                "type": "gateway",
                "id": "3b3932ac963b4e81948445ae8c20fb16",
                "sensors": [
                  "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
                ]
              }
            }
          },
          "filter": {
            "type": [
              "series"
            ],
            "gateway": "*",
            "sensor": [
              "temperatureDaliworks-3b3932ac963b4e81948445ae8c20fb16"
            ]
          }
        },
        "ctime": "1490769625019",
        "id": "972"
      },
      "x-stoplight": {
        "id": "rule-output",
        "name": "Rule Output",
        "public": true
      }
    },
    "gateway-for-put": {
      "title": "gateway",
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "minLength": 1,
          "description": "Gateway 모델id"
        },
        "desc": {
          "type": "string",
          "minLength": 1,
          "description": "Gateway 설명"
        },
        "mobile": {
          "type": "string",
          "minLength": 1,
          "description": "휴대폰 번호"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Gateway 이름"
        },
        "autoCreateDiscoverable": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "자동으로 센서를 검색해서 등록하는 게이트웨이 인지의 여부.\n(이 값이 \"n\"이면 자동 등록 게이트웨이라도 자동등록 되지 않음)"
        },
        "virtual": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "가상 게이트웨이 여부."
        },
        "location": {
          "type": "object",
          "description": "게이트웨이 위치 정보."
        },
        "delegate": {
          "type": "string",
          "enum": [
            "y",
            "n"
          ],
          "description": "delegate gateway 여부"
        },
        "delegateInfo": {
          "type": "object",
          "description": "추후오픈"
        },
        "customFields": {
          "type": "object",
          "description": "부가 추가 정보"
        },
        "deviceModels": {
          "type": "array",
          "description": "게이트웨이 등록된 디바이스 모델의 목록",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "디바이스 id"
              },
              "model": {
                "type": "string",
                "description": "디바이스 모델id"
              }
            },
            "required": [
              "model"
            ]
          }
        }
      },
      "example": {
        "id": "1000111122334446",
        "delegateInfo": {
          "realId": "1000111122334446",
          "model": "skt_lora",
          "branchId": "ThingPlug",
          "parser": {
            "vendor": "skt_lora",
            "model": "RYU124",
            "sensors": [
              {
                "type": "temperature",
                "sequence": "1"
              },
              {
                "type": "humidity",
                "sequence": "1"
              },
              {
                "type": "light",
                "sequence": "1"
              },
              {
                "type": "stringActuator",
                "sequence": "1"
              }
            ]
          },
          "extra": {
            "AppEUI": "starterkittest"
          }
        },
        "model": "50",
        "reportInterval": 300000,
        "ctime": "1484731239233",
        "_service": "1",
        "devices": [
          "1000111122334446"
        ],
        "sensors": [
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "temperature-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239270",
            "ctime": "1484731239269",
            "delegate": "y",
            "sequence": "1",
            "type": "temperature",
            "name": "temperature_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericTemp",
            "deviceId": "1000111122334446",
            "id": "temperature-1000111122334446-1"
          },
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "humidity-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239287",
            "ctime": "1484731239286",
            "delegate": "y",
            "sequence": "1",
            "type": "humidity",
            "name": "humidity_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericHumi",
            "deviceId": "1000111122334446",
            "id": "humidity-1000111122334446-1"
          },
          {
            "category": "sensor",
            "delegateInfo": {
              "realId": "light-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1484731239297",
            "ctime": "1484731239293",
            "delegate": "y",
            "sequence": "1",
            "type": "light",
            "name": "light_1",
            "driverName": "genericSensor",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericLight",
            "deviceId": "1000111122334446",
            "id": "light-1000111122334446-1"
          },
          {
            "category": "actuator",
            "delegateInfo": {
              "realId": "stringActuator-1000111122334446-1",
              "model": "skt_lora",
              "branchId": "ThingPlug"
            },
            "mtime": "1487051535184",
            "ctime": "1484731239308",
            "delegate": "y",
            "sequence": "1",
            "type": "stringActuator",
            "series": "series.sensor.BQBVq2",
            "name": "stringActuator_1",
            "driverName": "genericActuator",
            "owner": "1000111122334446",
            "network": "skt_lora",
            "model": "genericStringActuator",
            "deviceId": "1000111122334446",
            "id": "stringActuator-1000111122334446-1"
          }
        ],
        "deviceModels": [
          {
            "id": "1000111122334446",
            "model": "RYU124"
          }
        ],
        "mtime": "1487917692310",
        "_site": "1",
        "tree": "1000111122334446",
        "delegate": "y",
        "name": "ggfffggg",
        "autoCreateDiscoverable": "n"
      },
      "x-stoplight": {
        "id": "gateway-for-put",
        "name": "Gateway for PUT",
        "public": true
      }
    },
    "sensor-status-status": {
      "title": "Sensor-status Status",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "leafItem 타입",
          "enum": [
            "status",
            "series"
          ]
        },
        "value": {
          "type": "string",
          "description": "입력 받은 status 값"
        },
        "srcDbType": {
          "type": "string",
          "description": "status 값의 부모의 타입"
        },
        "time": {
          "type": "string",
          "description": "상태값 입력시 함께 입력한 시간(마지막 게이트웨이가 전송한 시각)"
        },
        "expireAt": {
          "type": "string",
          "description": "유효기간 만료 시각 (-1:만료기간 없음)\n\nepoch time."
        },
        "vtime": {
          "type": "string",
          "description": "마지막 게이트웨이 상태 변경 시각."
        },
        "status": {
          "type": "string",
          "description": "internal use only"
        },
        "owner": {
          "type": "string",
          "description": "소유 게이트웨이의 아이디(tree id)"
        },
        "gateway": {
          "type": "string",
          "description": "소유 게이트웨이의 아이디"
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "ctime": {
          "type": "string",
          "description": "생성시각"
        },
        "id": {
          "type": "string",
          "description": "해당 status 데이터의 고유 Id"
        }
      },
      "example": {
        "type": "status",
        "value": "on",
        "srcType": "temperature",
        "srcCategory": "sensor",
        "srcDbType": "sensor",
        "time": "1492666149961",
        "expireAt": "1492666239961",
        "vtime": "1492577384029",
        "status": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
        "owner": "914af1c57e5a4caf8ab42756cddb5267",
        "sensor": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
        "mtime": "1492666149961",
        "ctime": "1492577384029",
        "id": "status.sensor.DuFYPl"
      },
      "x-stoplight": {
        "id": "sensor-status-status",
        "name": "Sensor-status Status",
        "public": true
      }
    },
    "sensor-series-series": {
      "title": "Sensor-series Series",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "leafItem 타입"
        },
        "value": {
          "type": "string",
          "description": "입력 받은 센서 값"
        },
        "time": {
          "type": "string",
          "description": "센서값 입력시 함께 입력한 시간"
        },
        "srcType": {
          "type": "string",
          "description": "센서의 타입"
        },
        "srcCategory": {
          "type": "string",
          "description": "센서의 카테고리"
        },
        "srcDbType": {
          "type": "string",
          "description": "series값의 부모의 타입"
        },
        "series": {
          "type": "string",
          "description": "소유 센서의 아이디"
        },
        "owner": {
          "type": "string",
          "description": "소유 게이트웨이의 아이디"
        },
        "sensor": {
          "type": "string",
          "description": "센서의 ID"
        },
        "mtime": {
          "type": "string",
          "description": "수정시각"
        },
        "ctime": {
          "type": "string",
          "description": "생성시각"
        },
        "id": {
          "type": "string",
          "description": "해당 series데이터의 고유 Id"
        }
      },
      "example": {
        "type": "series",
        "time": "1492676085914",
        "value": "13",
        "srcType": "temperature",
        "srcCategory": "sensor",
        "srcDbType": "sensor",
        "series": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
        "owner": "914af1c57e5a4caf8ab42756cddb5267",
        "sensor": "temperatureDaliworks-914af1c57e5a4caf8ab42756cddb5267",
        "mtime": "1492676093362",
        "ctime": "1492577384028",
        "id": "series.sensor.fddCsW"
      },
      "x-stoplight": {
        "id": "sensor-series-series",
        "name": "Sensor-series Series",
        "public": true
      }
    }
  },
  "x-stoplight": {
    "version": {
      "groups": {
        "utilFuncs": [],
        "savedEntries": [],
        "tests": [],
        "traits": [],
        "docs": [
          {
            "description": "# OAuth 2.0 인증용 API\n\nOAuth 2.0 인증과 access token발급을 위한 api.\n\n자세한 내용은 다음 링크를 참조하세요.\n\n[Thing+ OAuth 2.0 안내](https://github.com/daliworks/thingplus-portal/blob/master/docs/oauth2.md)",
            "divider": false,
            "items": [
              {
                "type": "endpoints",
                "_id": "POST_oauth2-authClients"
              },
              {
                "_id": "GET_oauth2-authorize",
                "type": "endpoints"
              },
              {
                "_id": "POST_oauth2-token",
                "type": "endpoints"
              }
            ],
            "name": "OAuth2"
          },
          {
            "divider": false,
            "description": "### 사용자 조회용 Rest API",
            "name": "Users",
            "items": [
              {
                "_id": "GET-user-me",
                "type": "endpoints"
              },
              {
                "_id": "GET-user",
                "type": "endpoints"
              },
              {
                "_id": "LIST-users",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 게이트웨이 모델 조회용 Rest API",
            "name": "GatewayModels",
            "divider": false,
            "items": [
              {
                "_id": "LIST-gatewayModels",
                "type": "endpoints"
              },
              {
                "_id": "GET-gatewayModel",
                "type": "endpoints"
              },
              {
                "_id": "dGsLtmTMZZdiRLsRq",
                "type": "endpoints"
              },
              {
                "type": "endpoints",
                "_id": "gRWKrc9pZDmcaaQLz"
              },
              {
                "_id": "ZYqpg3g6NwQqwKqWR",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 센서 타입 조회용 Rest API",
            "name": "SensorTypes",
            "divider": false,
            "items": [
              {
                "type": "endpoints",
                "_id": "LIST-sensorTypes"
              },
              {
                "_id": "GET-sensorType",
                "type": "endpoints"
              },
              {
                "_id": "BLtf4TTbT25dJmNJp",
                "type": "endpoints"
              },
              {
                "_id": "onptKHipHAENWTdRx",
                "type": "endpoints"
              },
              {
                "_id": "YstGa8aabjsyNuxqB",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 센서 드라이버 조회용 Rest API",
            "name": "SensorDrivers",
            "divider": false,
            "items": [
              {
                "_id": "NzpvLfrG5zbq26mzY",
                "type": "endpoints"
              },
              {
                "_id": "WoAaeE5ax7jAaL6in",
                "type": "endpoints"
              },
              {
                "_id": "LIST-sensorDrivers",
                "type": "endpoints"
              },
              {
                "_id": "GET-sensorDriver",
                "type": "endpoints"
              },
              {
                "_id": "8hbBPFS9ZKcwHz3uN",
                "type": "endpoints"
              },
              {
                "_id": "9dHsG8fXL3EWi34bh",
                "type": "schemas"
              },
              {
                "_id": "yz6brY3eksTDCupMm",
                "type": "schemas"
              },
              {
                "_id": "xgvSr4vbLeFfPMQnk",
                "type": "schemas"
              },
              {
                "_id": "8BxCoDaNDZpKBRHnq",
                "type": "schemas"
              },
              {
                "_id": "Y6uvRreBCmp6znDkN",
                "type": "schemas"
              },
              {
                "_id": "SNejCeMT4pLSKsYEX",
                "type": "schemas"
              },
              {
                "_id": "2tF86ohBFmGd3E8t4",
                "type": "schemas"
              },
              {
                "_id": "ssScRfmCvDE7wSXzk",
                "type": "schemas"
              },
              {
                "_id": "ZpZcqGcbMYd9aewpo",
                "type": "schemas"
              },
              {
                "_id": "aBJKz7d4sqnw7PjNN",
                "type": "schemas"
              },
              {
                "_id": "uuRNeGSmiXFSHC4vS",
                "type": "schemas"
              },
              {
                "_id": "prwzPLSiHzKewXooN",
                "type": "schemas"
              },
              {
                "_id": "4MdLLiPD3FiH5Xd4L",
                "type": "schemas"
              },
              {
                "_id": "iGzj97wzGHohWe8Ns",
                "type": "schemas"
              },
              {
                "_id": "Z3HGZyFBDzdh2MjLp",
                "type": "schemas"
              },
              {
                "_id": "9fbRKXzsrjcpfpxNr",
                "type": "schemas"
              },
              {
                "_id": "s3n3W3iAcnJXxkvhj",
                "type": "schemas"
              },
              {
                "_id": "39tP43NefbYn4cytd",
                "type": "schemas"
              },
              {
                "_id": "x7oG6sDfnK6Z7yxY9",
                "type": "schemas"
              },
              {
                "_id": "aFj7EpdFL6ReSKFwt",
                "type": "schemas"
              },
              {
                "_id": "jT8DRgR4EebyoGeTY",
                "type": "schemas"
              },
              {
                "_id": "k67DXKxH9yhqfzGdL",
                "type": "schemas"
              },
              {
                "_id": "cBfBvZnb8ftFHJW7E",
                "type": "schemas"
              },
              {
                "_id": "J7qptRmNipxAR858j",
                "type": "schemas"
              },
              {
                "_id": "xmsRTsX9AJNZFvZ4c",
                "type": "schemas"
              },
              {
                "_id": "DuQCiJgqsWWAQezHM",
                "type": "schemas"
              },
              {
                "_id": "Yt64d5TuxYFQDdjEs",
                "type": "schemas"
              },
              {
                "type": "schemas",
                "_id": "6v3G7PeMXJtpgHpAF"
              }
            ]
          },
          {
            "description": "### 게이트웨이 REST API.\n\n`GET`, `PUT`, `DELETE`만 제공하고,\n`POST`(게이트웨이 등록)은 Non Rest API인 RegisterGateway로 수행됨.",
            "name": "Gateways",
            "divider": false,
            "items": [
              {
                "_id": "GET-gateway",
                "type": "endpoints"
              },
              {
                "_id": "LIST-gateways",
                "type": "endpoints"
              },
              {
                "_id": "PUT-gateway",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-gateway",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 게이트웨이에 연결된 디바이스 Rest API\n\n특정 게이트웨이에 속한 디바이스에 대한 API 이므로 해당 게이트웨이의 id를 owner 속성에 지정해야 함.",
            "name": "Gateway-devices",
            "divider": false,
            "items": [
              {
                "_id": "GET-gateway-devices",
                "type": "endpoints"
              },
              {
                "_id": "LIST-gateway-devices",
                "type": "endpoints"
              },
              {
                "_id": "PUT-gateway-devices",
                "type": "endpoints"
              },
              {
                "_id": "POST-gateway-devices",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-gateway-devices",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 게이트웨이에 연결된 센서 Rest API\n\n특정 게이트웨이에 속한 센서에 대한 API 이므로 해당 게이트웨이의 id를 owner 속성에 지정해야 함.",
            "name": "Gateway-sensors",
            "divider": false,
            "items": [
              {
                "_id": "GET-gateway-sensors",
                "type": "endpoints"
              },
              {
                "_id": "LIST-gateway-sensors",
                "type": "endpoints"
              },
              {
                "_id": "PUT-gateway-sensors",
                "type": "endpoints"
              },
              {
                "_id": "POST-gateway-sensors",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-gateway-sensors",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 게이트웨이 status 정보 Rest API\n\n`GET`과 `PUT` 메소드만 지원.",
            "name": "Gateway-status",
            "divider": false,
            "items": [
              {
                "_id": "GET-gateway-status",
                "type": "endpoints"
              },
              {
                "_id": "PUT-gateway-status",
                "type": "endpoints"
              },
              {
                "_id": "4448GA5XoaPG8TJ2d",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 센서 status 정보 Rest API\n\n`GET`과 `PUT` 메소드만 지원.",
            "name": "Sensor-status",
            "divider": false,
            "items": [
              {
                "_id": "GET-sensor-status",
                "type": "endpoints"
              },
              {
                "_id": "PUT-sensor-status",
                "type": "endpoints"
              },
              {
                "_id": "JXr3MqfxX438mFGKE",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 센서 series 정보 Rest API\n\n`GET`과 `PUT` 메소드만 지원.",
            "name": "Sensor-series",
            "divider": false,
            "items": [
              {
                "_id": "GET-sensor-series",
                "type": "endpoints"
              },
              {
                "_id": "PUT-sensor-series",
                "type": "endpoints"
              },
              {
                "_id": "4qbFf829ERkM5obhT",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### 룰 Rest API",
            "name": "Rules",
            "divider": false,
            "items": [
              {
                "_id": "GET-rule",
                "type": "endpoints"
              },
              {
                "_id": "LIST-rules",
                "type": "endpoints"
              },
              {
                "_id": "PUT-rule",
                "type": "endpoints"
              },
              {
                "_id": "POST-rule",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-rule",
                "type": "endpoints"
              }
            ]
          },
          {
            "description": "### Push device Rest API\n\n사용자가안드로이드 및 iOS Push 서비스를 받기 위한 기기를 등록 및 조회 API.\n",
            "name": "Pushdevices",
            "divider": false,
            "items": [
              {
                "_id": "GET-pushdevices",
                "type": "endpoints"
              },
              {
                "_id": "LIST-pushdevices",
                "type": "endpoints"
              },
              {
                "_id": "PUT-pushdevices",
                "type": "endpoints"
              },
              {
                "_id": "POST-pushdevices",
                "type": "endpoints"
              },
              {
                "_id": "DELETE-pushdevices",
                "type": "endpoints"
              }
            ]
          },
          {
            "divider": false,
            "items": [
              {
                "_id": "POST-controlActuator",
                "type": "endpoints"
              },
              {
                "_id": "POST_registerGateway",
                "type": "endpoints"
              },
              {
                "_id": "POST_registerGatewayKey",
                "type": "endpoints"
              },
              {
                "_id": "POST_root",
                "type": "endpoints"
              },
              {
                "type": "endpoints",
                "_id": "POST_manageGateway"
              }
            ],
            "name": "Non Rest APIs",
            "description": ""
          },
          {
            "name": "Models",
            "divider": false,
            "items": [
              {
                "_id": "user-output",
                "type": "schemas"
              },
              {
                "_id": "gatewaymodel-output",
                "type": "schemas"
              },
              {
                "_id": "gateway-for-put",
                "type": "schemas"
              },
              {
                "_id": "xgvSr4vbLeFfPMQnk",
                "type": "schemas"
              },
              {
                "_id": "8BxCoDaNDZpKBRHnq",
                "type": "schemas"
              },
              {
                "_id": "gateway-common",
                "type": "schemas"
              },
              {
                "_id": "gateway-output",
                "type": "schemas"
              },
              {
                "_id": "pushdevices",
                "type": "schemas"
              },
              {
                "_id": "pushdevices-output",
                "type": "schemas"
              },
              {
                "_id": "rule-input",
                "type": "schemas"
              },
              {
                "_id": "rule-output",
                "type": "schemas"
              },
              {
                "_id": "sensor",
                "type": "schemas"
              },
              {
                "_id": "sensor-input",
                "type": "schemas"
              },
              {
                "_id": "sensor-output",
                "type": "schemas"
              },
              {
                "_id": "device-input",
                "type": "schemas"
              },
              {
                "_id": "Z3HGZyFBDzdh2MjLp",
                "type": "schemas"
              },
              {
                "_id": "device-output",
                "type": "schemas"
              },
              {
                "_id": "gateway-status-input",
                "type": "schemas"
              },
              {
                "_id": "gateway-status-output",
                "type": "schemas"
              },
              {
                "_id": "gateway-status-status",
                "type": "schemas"
              },
              {
                "_id": "sensor-status-input",
                "type": "schemas"
              },
              {
                "_id": "sensor-status-output",
                "type": "schemas"
              },
              {
                "_id": "sensor-status-status",
                "type": "schemas"
              },
              {
                "_id": "sensor-series-input",
                "type": "schemas"
              },
              {
                "_id": "sensor-series-output",
                "type": "schemas"
              },
              {
                "_id": "sensor-series-series",
                "type": "schemas"
              },
              {
                "_id": "J7qptRmNipxAR858j",
                "type": "schemas"
              },
              {
                "_id": "sensortype-output",
                "type": "schemas"
              },
              {
                "_id": "sensordriver-output",
                "type": "schemas"
              },
              {
                "_id": "registergateway-output",
                "type": "schemas"
              },
              {
                "type": "schemas",
                "_id": "authclient"
              }
            ]
          },
          {
            "name": "",
            "items": []
          }
        ]
      }
    },
    "functions": {},
    "textSections": {},
    "mock": {
      "dynamic": false,
      "enabled": false
    }
  },
  "x-tests": {}
}
